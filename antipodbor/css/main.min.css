@import url("https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i,900&subset=cyrillic");blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-spacing:0;border-collapse:collapse}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-weight:400;font-style:normal}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}*{box-sizing:border-box}.wrapper{max-width:1200px;margin:0 auto;padding-right:15px;padding-left:15px}body{font-family:Roboto,sans-serif;font-size:18px;font-weight:400;line-height:1.5;background-color:#ebf1f3}.btn,body{color:#2d3047}.btn{font-size:1.563em;line-height:2;padding-right:30px;padding-left:30px;cursor:pointer;border:none;border-radius:5px;background-color:#e0ca3c;box-shadow:0 4px 4px rgba(45,48,71,.25)}.btn:focus,.btn:hover{background-color:#c9b220}.white-box{margin-bottom:30px;background-color:#fdfdfd;box-shadow:0 4px 4px rgba(45,48,71,.25)}p{font-size:1em;line-height:1.7;margin-bottom:1em;color:#2d3047}a{color:#048a81}h1{font-size:3.052em}h1,h2{line-height:1.5;color:#2d3047}h2{font-size:2.441em;text-align:center}h3{font-size:1.953em;line-height:1.2;color:#2d3047}strong{font-weight:700}.social-block{margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.site-name{font-size:48px;font-weight:700;line-height:84px;text-decoration:none;color:#fdfdfd}.site-name span{color:#e0ca3c}.social-icon{max-width:100px}.social-icon__link{text-decoration:none}.social-icon__svg{max-width:100px;height:auto}.icon{display:inline-block;width:1em;height:1em;fill:currentColor}.icon-arrow{font-size:51.332rem;width:1em}.icon-calendar,.icon-comment{font-size:2.3rem;width:.65217em}.icon-drive2,.icon-instagram{font-size:10rem;width:1em}.icon-view{font-size:2.3rem;width:.65217em}.icon-vk,.icon-youtube{font-size:10rem;width:1em}.hero{display:-ms-flexbox;display:flex;margin-top:150px;padding-bottom:150px;padding-left:30px;-ms-flex-align:end;align-items:flex-end}.hero__text{font-size:3.052em;line-height:1.9;max-width:80%;margin-bottom:50px;color:#fdfdfd}.hero__btn{margin-right:30px}.hero__btn:last-child{margin-right:0}.header__index{position:relative;background-image:url(../img/hero-bg.jpg);background-repeat:no-repeat;background-position:100% 0;background-size:cover;box-shadow:inset 0 0 0 1000px rgba(4,138,129,.8)}.top-line{z-index:1;display:-ms-flexbox;display:flex;padding:60px 20px 60px 30px;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.top-line>*{text-align:left;-ms-flex-pack:start;justify-content:flex-start}.nav-top{display:-ms-flexbox;display:flex}.nav-top__item{margin-left:30px}.nav-top__item:first-child{margin-left:0}.nav-top__link{font-size:24px;line-height:42px;display:block;text-decoration:none;color:#fdfdfd}.nav-top__link.active,.nav-top__link:focus,.nav-top__link:hover{color:#e4e4e4;border-bottom:1px solid #e0ca3c}.burger-top{position:absolute;top:-36px;right:0;display:none;width:30px;height:2px;border-bottom:3px solid #fdfdfd}.burger-top:after,.burger-top:before{position:absolute;display:block;width:100%;height:2px;content:"";transition:all .3s linear;border-bottom:3px solid #e0ca3c}.burger-top:before{top:-12px}.burger-top:after{top:9px}.burger-top--active{border-bottom:3px solid transparent}.burger-top--active:before{top:0;transform:rotate(45deg)}.burger-top--active:after{top:0;transform:rotate(-45deg)}.social-block{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.social-icon__page{margin-top:60px;margin-bottom:30px}.social-icon__index{margin-right:25px;margin-left:25px}.social-icon__link{color:#2d3047}.social-icon__link:focus,.social-icon__link:hover{color:#6b72a2}.blog-items{margin-top:-30px;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around}.blog-item,.blog-items{display:-ms-flexbox;display:flex}.blog-item{flex-direction:column;width:calc(33.33333% - 30px);padding:0;-ms-flex-direction:column}.blog-item__title{padding:30px;-ms-flex-positive:1;flex-grow:1}.blog-item__meta{margin:auto auto 0}.blog-item__text{padding:30px}.blog-item__morelink{display:block;margin-top:auto;padding-right:30px;padding-bottom:30px;text-align:right;color:#048a81}.blog-item__photo{height:auto;-ms-flex-line-pack:center;align-content:center}.blog-item__photo img{width:100%}.moreblog{margin-top:30px}.inblog{padding-right:30px;padding-left:30px;text-align:right}.blog-meta,.blog-meta__item{display:-ms-flexbox;display:flex}.blog-meta__item{font-size:.8em;position:relative;margin-right:20px;color:#e0ca3c}.blog-meta__svg{height:20px;margin-right:5px}.blog-meta__link{color:#e0ca3c}.index-about{display:-ms-flexbox;display:flex;margin-top:30px;padding:0 30px;-ms-flex-pack:justify;justify-content:space-between}.index-about__photo{margin-right:30px;-ms-flex-positive:0;flex-grow:0;-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-preferred-size:250px;flex-basis:250px}.index-about__text{-ms-flex:1;flex:1}.index-about__more{text-align:right}.sidebar{position:fixed;z-index:1;top:20px;bottom:0;display:-ms-flexbox;display:flex;flex-direction:column;box-sizing:border-box;width:calc(33.33333% - 30px);max-width:370px;margin-right:15px;margin-left:15px;padding-top:65px;word-wrap:break-word;background-color:#048a81;-ms-flex-direction:column}.sidebar__logo{margin-bottom:66px;-ms-flex-item-align:center;align-self:center}.sidebar__site-name{font-size:42px;line-height:1.5}.sidebar__btn{font-size:22px;margin-right:25px;margin-bottom:20px;margin-left:25px}.sidebar__nav{margin-top:55px;padding-left:55px}.sidebar-menu__item{font-size:1.25em;position:relative;padding-left:24px}.sidebar-menu__item:before{position:absolute;top:7px;left:0;display:block;width:14px;height:14px;content:"";border:1px solid #e0ca3c;border-radius:50%}.sidebar-menu__item--active:before{background-color:#e0ca3c}.sidebar-menu__link{text-decoration:none;color:#fdfdfd}.sidebar__social-block{padding-right:54px;padding-left:54px;-ms-flex-pack:justify;justify-content:space-between}.sidebar__social-block .social-icon__link{color:#fdfdfd}.sidebar__social-block .social-icon__link:focus,.sidebar__social-block .social-icon__link:hover{color:#e4e4e4}.sidebar__social-block .social-icon__svg{max-width:50px}.sidebar__text-block{padding-right:40px;padding-left:40px}.sidebar__sign,.sidebar__urge{font-size:.8em;color:#e0ca3c}.sidebar__sign{text-align:right}.sidebar__arrow{position:absolute;z-index:2;top:0;right:-45px;display:none;width:50px;height:70px;padding-top:12px;border-radius:5px;background-color:#048a81}.icon-arrow{font-size:40px;z-index:3;transition:all .5s linear .1s;transform:rotate(0deg);fill:#fdfdfd}.icon-arrow.close{transition:all .5s linear .1s;transform:rotate(180deg)}.white-box__index{margin-top:60px;padding:30px 15px}.main-box{position:relative;display:-ms-flexbox;display:flex;min-height:100vh;margin-right:-15px;margin-left:-15px;padding-top:20px;-ms-flex-wrap:wrap;flex-wrap:wrap}.main-content{box-sizing:border-box;width:calc(66.66667% - 30px);margin-right:15px;margin-left:15px;margin-left:calc(33.33333% + 15px);word-wrap:break-word}.post__img{height:auto;max-height:500px}.post__header{padding:25px 50px;padding:15px 20px}.post__title{margin-bottom:30px}.post__container{padding:30px 50px}.post__hr{width:60%;margin:30px auto;color:#e0ca3c}.post__comm-link{text-align:right}.index-footer{width:100%;height:20px;margin-top:60px;background-color:#048a81}.footer-copy{font-size:.512em;margin-bottom:-2px;text-align:right}.footer-copy a,.footer-copy p{color:#aaaec9}@media screen and (max-width:1200px){.sidebar__site-name{font-size:38px}.sidebar__btn{font-size:18px;margin-bottom:10px}.sidebar__nav{margin-top:35px}.sidebar__social-block{margin-top:-20px;margin-bottom:-20px}}@media screen and (max-width:992px){.wrapper{padding-right:15px;padding-left:15px}.hero{margin-top:80px;padding-bottom:80px}.hero__text{font-size:2.441em}.hero__btn{font-size:1em;padding-right:20px;padding-left:20px}.site-name{-ms-flex-pack:center;justify-content:center}.blog-item{width:calc(83.33333% - 30px);-ms-flex-pack:center;justify-content:center}.sidebar{width:370px;margin-left:-350px;transition:margin-left .5s linear .1s}.sidebar.mobile{margin-left:0}.sidebar__arrow{display:block}.main-content{width:calc(91.66667% - 30px);margin-left:calc(8.33333% + 15px)}}@media screen and (max-width:720px){body{font-size:16px;line-height:1.4}.hero{margin-top:50px;padding-bottom:50px}.hero__text{line-height:1.5}.hero__btn{margin-right:10px}.top-line>*{width:100%}.nav-top__link{font-size:19px}.social-icon__svg{max-width:80px}}@media screen and (max-width:576px){.hero__text{font-size:1.563em}.hero__btn{margin-bottom:20px}.top-line{padding-top:30px;padding-right:0;padding-left:0}.top-line>*{position:relative}.site-name{font-size:30px;line-height:68px}.nav-top{position:absolute;right:0;left:0;flex-direction:column;padding-top:20px;padding-bottom:20px;background-color:#048a81;-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.nav-top--mobile{display:none}.nav-top__item{margin-left:0}.burger-top{display:block}.social-icon__index{margin-right:10px;margin-left:10px}.social-icon__svg{max-width:50px}.blog-item__title{font-size:1.563em}.blog-meta__item{margin-right:10px}.index-about{-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center}.sidebar{top:10px;width:270px;margin-left:-260px;padding-top:5px}.sidebar__logo{margin-bottom:10px}.sidebar__btn{margin-right:10px;margin-left:10px}.sidebar__nav{margin-top:10px}.sidebar__social-block{margin-top:-35px;margin-bottom:-35px;padding-right:25px;padding-left:25px}.main-box{padding-top:10px}.post__title{font-size:1.953em}.post__container{padding:20px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbi9fc2V0dGluZ3Muc2FzcyIsIm1haW4uY3NzIiwiYmluL3NtYXJ0LWdyaWQuc2FzcyIsImJpbi9fdGhlbXMuc2FzcyIsImJpbi9fc3ByaXRlLnNjc3MiLCJjb21wb25lbnRzL19oZWFkZXIuc2FzcyIsImNvbXBvbmVudHMvX2hlcm8uc2FzcyIsImNvbXBvbmVudHMvX3NvY2lhbC5zYXNzIiwiY29tcG9uZW50cy9fYmxvZy1pdGVtcy5zYXNzIiwiY29tcG9uZW50cy9fYWJvdXQtaW5kZXguc2FzcyIsImNvbXBvbmVudHMvc2lkZWJhci5zYXNzIiwicGFnZS9faW5kZXguc2FzcyIsInBhZ2UvX3NpbmdsZS5zYXNzIiwiY29tcG9uZW50cy9fZm9vdGVyLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0Esc0hBQVksQUNDWixtR0NpVEksU0FBQSxBQUNJLFNBQUEsQ0R4UlAsQUFFRCxNQzJSSSxpQkFBQSxBQUNJLHdCQUFvQixDRHhSM0IsQUFFRCxrQkM2UkksUUFBQSxDRHhSSCxBQzJSRywrQ0EzUkEsZ0JBQWMsQUFqQmQsaUJBSlMsQ0RtQ1osQUFFRCxNQUVJLGVDOUJJLENEK0JQLEFBRUQsV0R2QkksZUFBZ0IsQ0MyQm5CLEFBRUQsa0JEbkJJLGVBQUEsQUFDQSxlQUFtQixDQzJCdEIsQUFFRCxJRHpCSSx1QkE5Q2tCLENDMEVyQixBQUVELElEckNBLDBCQUFBLENDd0NDLEFEekJELHNCQUdJLG9CQUFzQixBQzZCdEIsa0JBQW1CLEFEM0J2QixtQkFBQSxDQzZCQyxBQUVELE9BRUksVUFBWSxDRDNCaEIsQUM4QkEsbUZEZkksYUFBQSxDQzZCSCxBQUVELElEMUJJLGVBQWlCLEFDNkJqQixXQUFhLENEM0JqQixBQzhCQSxFQy9FSSxxQkFBZSxDRG1GbEIsQUFFRCxTRGxDSSxpQkFBQSxjQUFBLEFDc0NBLG1CRHRDQSxBQ3VDQSxpQkR2Q0EsQ0N3Q0gsQUFFRCxLRXhJSSw4QkFBZSxBQUNmLGVBQWlCLEFBQ2pCLGdCQUU2QixBQVBqQyxnQkFB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Li9ub2RlX21vZHVsZXMvcmZzL3Nhc3MvX3Jmcyc7XG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bzozMDAsMzAwaSw0MDAsNDAwaSw1MDAsNTAwaSw3MDAsNzAwaSw5MDAmc3Vic2V0PWN5cmlsbGljJyk7XG5cblxuLy8gQ29sb3JzXG5cbiRtYWluLWNvbG9yOiAjMkQzMDQ3O1xuJHNlY29uZC1jb2xvcjogIzA0OEE4MTtcbiRhY2NlbnQtY29sb3I6ICNFMENBM0M7XG4kbGlnaHQtY29sb3I6ICNGREZERkQ7XG4kYmctY29sb3I6ICNFQkYxRjM7XG5cblxuJG1haW4tZm9udDogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4kbWFpbi1zaXplOiAxOHB4O1xuXG4kaDE6IDMuMDUyZW07XG4kaDI6IDIuNDQxZW07XG4kaDM6IDEuOTUzZW07XG4kaDQ6IDEuNTYzZW07XG4kaDU6IDEuMjVlbTtcbiRwOiAxZW07XG4kc206IDAuOGVtO1xuJHhzOiAwLjUxMmVtO1xuXG4kbWFpbi1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoJG1haW4tY29sb3IsIDAuMjUpO1xuXG5AaW5jbHVkZSByZXNldCgpO1xuXG4qIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbi53cmFwcGVyIHtcbiAgICBAaW5jbHVkZSB3cmFwcGVyKCk7IH1cblxuYm9keSB7XG4gICAgZm9udC1mYW1pbHk6ICRtYWluLWZvbnQ7XG4gICAgZm9udC1zaXplOiAkbWFpbi1zaXplO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctY29sb3I7XG4gICAgY29sb3I6ICRtYWluLWNvbG9yO1xuICAgIEBpbmNsdWRlIHNtLWJsb2NrKCkge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7IH0gfVxuXG5cbi5idG4ge1xuICAgIGxpbmUtaGVpZ2h0OiAyO1xuICAgIGZvbnQtc2l6ZTogJGg0O1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogJG1haW4tY29sb3I7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvcjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm94LXNoYWRvdzogJG1haW4tc2hhZG93O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJGFjY2VudC1jb2xvciwgMTApOyB9IH1cblxuLndoaXRlLWJveCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0LWNvbG9yO1xuICAgIGJveC1zaGFkb3c6ICRtYWluLXNoYWRvdztcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbnAge1xuICAgIGZvbnQtc2l6ZTogJHA7XG4gICAgY29sb3I6ICRtYWluLWNvbG9yO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtOyB9XG5cbmEge1xuICAgIGNvbG9yOiAkc2Vjb25kLWNvbG9yOyB9XG5cbmgxIHtcbiAgICBmb250LXNpemU6ICRoMTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGNvbG9yOiAkbWFpbi1jb2xvcjsgfVxuXG5oMiB7XG4gICAgZm9udC1zaXplOiAkaDI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgY29sb3I6ICRtYWluLWNvbG9yOyB9XG5cbmgzIHtcbiAgICBmb250LXNpemU6ICRoMztcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIGNvbG9yOiAkbWFpbi1jb2xvcjsgfVxuXG5zdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi5zb2NpYWwtYmxvY2sge1xuICAgIEBpbmNsdWRlIHJvdy1mbGV4KCk7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiIsIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvOjMwMCwzMDBpLDQwMCw0MDBpLDUwMCw1MDBpLDcwMCw3MDBpLDkwMCZzdWJzZXQ9Y3lyaWxsaWMnKTtcblxuYm9keSxcbmRpdixcbmRsLFxuZHQsXG5kZCxcbnVsLFxubGksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wcmUsXG5jb2RlLFxuZm9ybSxcbmZpZWxkc2V0LFxuaW5wdXQsXG50ZXh0YXJlYSxcbnAsXG5ibG9ja3F1b3RlLFxudGgsXG50ZFxue1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG50YWJsZVxue1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbmZpZWxkc2V0LFxuaW1nLFxuYWJiclxue1xuICAgIGJvcmRlcjogMDtcbn1cblxuYWRkcmVzcyxcbmNhcHRpb24sXG5jaXRlLFxuY29kZSxcbmRmbixcbmVtLFxuc3Ryb25nLFxudGgsXG52YXJcbntcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxudWwgbGlcbntcbiAgICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5jYXB0aW9uLFxudGhcbntcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDZcbntcbiAgICBmb250LXNpemU6IDEwMCU7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuc3VwXG57XG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xufVxuXG5zdWJcbntcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3RcbntcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbmxlZ2VuZFxue1xuICAgIGNvbG9yOiAjMDAwO1xufVxuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxubWFpblxue1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pbWdcbntcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xufVxuXG4qXG57XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLndyYXBwZXJcbntcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbn1cblxuYm9keVxue1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuXG4gICAgY29sb3I6ICMyZDMwNDc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ViZjFmMztcbn1cblxuLmJ0blxue1xuICAgIGZvbnQtc2l6ZTogMS41NjNlbTtcbiAgICBsaW5lLWhlaWdodDogMjtcblxuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgY29sb3I6ICMyZDMwNDc7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGNhM2M7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDRweCA0cHggcmdiYSg0NSwgNDgsIDcxLCAuMjUpO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCA0cHggNHB4IHJnYmEoNDUsIDQ4LCA3MSwgLjI1KTtcbn1cblxuLmJ0bjpob3Zlcixcbi5idG46Zm9jdXNcbntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzliMjIwO1xufVxuXG4ud2hpdGUtYm94XG57XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZGZkZmQ7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDRweCA0cHggcmdiYSg0NSwgNDgsIDcxLCAuMjUpO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCA0cHggNHB4IHJnYmEoNDUsIDQ4LCA3MSwgLjI1KTtcbn1cblxucFxue1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7XG5cbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICBjb2xvcjogIzJkMzA0Nztcbn1cblxuYVxue1xuICAgIGNvbG9yOiAjMDQ4YTgxO1xufVxuXG5oMVxue1xuICAgIGZvbnQtc2l6ZTogMy4wNTJlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuXG4gICAgY29sb3I6ICMyZDMwNDc7XG59XG5cbmgyXG57XG4gICAgZm9udC1zaXplOiAyLjQ0MWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBjb2xvcjogIzJkMzA0Nztcbn1cblxuaDNcbntcbiAgICBmb250LXNpemU6IDEuOTUzZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcblxuICAgIGNvbG9yOiAjMmQzMDQ3O1xufVxuXG5zdHJvbmdcbntcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnNvY2lhbC1ibG9ja1xue1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiAgICAgICAgIGZsZXg7XG5cbiAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTVweDtcblxuICAgIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uc2l0ZS1uYW1lXG57XG4gICAgZm9udC1zaXplOiA0OHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiA4NHB4O1xuXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgY29sb3I6ICNmZGZkZmQ7XG59XG5cbi5zaXRlLW5hbWUgc3Bhblxue1xuICAgIGNvbG9yOiAjZTBjYTNjO1xufVxuXG4uc29jaWFsLWljb25cbntcbiAgICBtYXgtd2lkdGg6IDEwMHB4O1xufVxuXG4uc29jaWFsLWljb25fX2xpbmtcbntcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5zb2NpYWwtaWNvbl9fc3ZnXG57XG4gICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG5cbi5pY29uXG57XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgd2lkdGg6IDFlbTtcbiAgICBoZWlnaHQ6IDFlbTtcblxuICAgIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLmljb24tYXJyb3dcbntcbiAgICBmb250LXNpemU6IDUxLjMzMnJlbTtcblxuICAgIHdpZHRoOiAxZW07XG59XG5cbi5pY29uLWNhbGVuZGFyXG57XG4gICAgZm9udC1zaXplOiAyLjNyZW07XG5cbiAgICB3aWR0aDogLjY1MjE3ZW07XG59XG5cbi5pY29uLWNvbW1lbnRcbntcbiAgICBmb250LXNpemU6IDIuM3JlbTtcblxuICAgIHdpZHRoOiAuNjUyMTdlbTtcbn1cblxuLmljb24tZHJpdmUyXG57XG4gICAgZm9udC1zaXplOiAxMHJlbTtcblxuICAgIHdpZHRoOiAxZW07XG59XG5cbi5pY29uLWluc3RhZ3JhbVxue1xuICAgIGZvbnQtc2l6ZTogMTByZW07XG5cbiAgICB3aWR0aDogMWVtO1xufVxuXG4uaWNvbi12aWV3XG57XG4gICAgZm9udC1zaXplOiAyLjNyZW07XG5cbiAgICB3aWR0aDogLjY1MjE3ZW07XG59XG5cbi5pY29uLXZrXG57XG4gICAgZm9udC1zaXplOiAxMHJlbTtcblxuICAgIHdpZHRoOiAxZW07XG59XG5cbi5pY29uLXlvdXR1YmVcbntcbiAgICBmb250LXNpemU6IDEwcmVtO1xuXG4gICAgd2lkdGg6IDFlbTtcbn1cblxuLmhlYWRlcl9faW5kZXhcbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2hlcm8tYmcuanBnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IHRvcDtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMTAwMHB4IHJnYmEoNCwgMTM4LCAxMjksIC44KTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDEwMDBweCByZ2JhKDQsIDEzOCwgMTI5LCAuOCk7XG59XG5cbi50b3AtbGluZVxue1xuICAgIHotaW5kZXg6IDE7XG5cbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogICAgICAgICBmbGV4O1xuXG4gICAgcGFkZGluZy10b3A6IDYwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG5cbiAgICAtd2Via2l0LWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi50b3AtbGluZSA+ICpcbntcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi5uYXYtdG9wXG57XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6ICAgICAgICAgZmxleDtcbn1cblxuLm5hdi10b3BfX2l0ZW1cbntcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxuLm5hdi10b3BfX2l0ZW06Zmlyc3QtY2hpbGRcbntcbiAgICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLm5hdi10b3BfX2xpbmtcbntcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDQycHg7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgIGNvbG9yOiAjZmRmZGZkO1xufVxuXG4ubmF2LXRvcF9fbGluazpob3Zlcixcbi5uYXYtdG9wX19saW5rOmZvY3VzLFxuLm5hdi10b3BfX2xpbmsuYWN0aXZlXG57XG4gICAgY29sb3I6ICNlNGU0ZTQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGNhM2M7XG59XG5cbi5idXJnZXItdG9wXG57XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTM2cHg7XG4gICAgcmlnaHQ6IDA7XG5cbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAycHg7XG5cbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2ZkZmRmZDtcbn1cblxuLmJ1cmdlci10b3A6YmVmb3JlLFxuLmJ1cmdlci10b3A6YWZ0ZXJcbntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMnB4O1xuXG4gICAgY29udGVudDogJyc7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgbGluZWFyIC4zcztcbiAgICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCBsaW5lYXIgLjNzO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIGxpbmVhciAuM3M7XG5cbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2UwY2EzYztcbn1cblxuLmJ1cmdlci10b3A6YmVmb3JlXG57XG4gICAgdG9wOiAtMTJweDtcbn1cblxuLmJ1cmdlci10b3A6YWZ0ZXJcbntcbiAgICB0b3A6IDlweDtcbn1cblxuLmJ1cmdlci10b3AtLWFjdGl2ZVxue1xuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbn1cblxuLmJ1cmdlci10b3AtLWFjdGl2ZTpiZWZvcmVcbntcbiAgICB0b3A6IDA7XG5cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cblxuLmJ1cmdlci10b3AtLWFjdGl2ZTphZnRlclxue1xuICAgIHRvcDogMDtcblxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4uaGVyb1xue1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiAgICAgICAgIGZsZXg7XG5cbiAgICBtYXJnaW4tdG9wOiAxNTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTUwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuXG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGVuZDtcbiAgICAtd2Via2l0LWFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAtbXMtZmxleC1hbGlnbjogZW5kO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuXG4uaGVyb19fdGV4dFxue1xuICAgIGZvbnQtc2l6ZTogMy4wNTJlbTtcbiAgICBsaW5lLWhlaWdodDogMS45O1xuXG4gICAgbWF4LXdpZHRoOiA4MCU7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcblxuICAgIGNvbG9yOiAjZmRmZGZkO1xufVxuXG4uaGVyb19fYnRuXG57XG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xufVxuXG4uaGVyb19fYnRuOmxhc3QtY2hpbGRcbntcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5oZWFkZXJfX2luZGV4XG57XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9oZXJvLWJnLmpwZyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCB0b3A7XG4gICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDEwMDBweCByZ2JhKDQsIDEzOCwgMTI5LCAuOCk7XG4gICAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAxMDAwcHggcmdiYSg0LCAxMzgsIDEyOSwgLjgpO1xufVxuXG4udG9wLWxpbmVcbntcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6ICAgICAgICAgZmxleDtcblxuICAgIHBhZGRpbmctdG9wOiA2MHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDYwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuXG4gICAgLXdlYmtpdC1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4udG9wLWxpbmUgPiAqXG57XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcblxuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuXG4ubmF2LXRvcFxue1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiAgICAgICAgIGZsZXg7XG59XG5cbi5uYXYtdG9wX19pdGVtXG57XG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG59XG5cbi5uYXYtdG9wX19pdGVtOmZpcnN0LWNoaWxkXG57XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5uYXYtdG9wX19saW5rXG57XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA0MnB4O1xuXG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICBjb2xvcjogI2ZkZmRmZDtcbn1cblxuLm5hdi10b3BfX2xpbms6aG92ZXIsXG4ubmF2LXRvcF9fbGluazpmb2N1cyxcbi5uYXYtdG9wX19saW5rLmFjdGl2ZVxue1xuICAgIGNvbG9yOiAjZTRlNGU0O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBjYTNjO1xufVxuXG4uYnVyZ2VyLXRvcFxue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC0zNnB4O1xuICAgIHJpZ2h0OiAwO1xuXG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMnB4O1xuXG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZGZkZmQ7XG59XG5cbi5idXJnZXItdG9wOmJlZm9yZSxcbi5idXJnZXItdG9wOmFmdGVyXG57XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuXG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDJweDtcblxuICAgIGNvbnRlbnQ6ICcnO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIGxpbmVhciAuM3M7XG4gICAgICAgICAtby10cmFuc2l0aW9uOiBhbGwgbGluZWFyIC4zcztcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCBsaW5lYXIgLjNzO1xuXG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNlMGNhM2M7XG59XG5cbi5idXJnZXItdG9wOmJlZm9yZVxue1xuICAgIHRvcDogLTEycHg7XG59XG5cbi5idXJnZXItdG9wOmFmdGVyXG57XG4gICAgdG9wOiA5cHg7XG59XG5cbi5idXJnZXItdG9wLS1hY3RpdmVcbntcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi5idXJnZXItdG9wLS1hY3RpdmU6YmVmb3JlXG57XG4gICAgdG9wOiAwO1xuXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG59XG5cbi5idXJnZXItdG9wLS1hY3RpdmU6YWZ0ZXJcbntcbiAgICB0b3A6IDA7XG5cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbn1cblxuLnNvY2lhbC1ibG9ja1xue1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiAgICAgICAgIGZsZXg7XG5cbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtd2Via2l0LWZsZXgtd3JhcDogbm93cmFwO1xuICAgICAgICAtbXMtZmxleC13cmFwOiBub3dyYXA7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbn1cblxuLnNvY2lhbC1pY29uX19wYWdlXG57XG4gICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uc29jaWFsLWljb25fX2luZGV4XG57XG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xufVxuXG4uc29jaWFsLWljb25fX2xpbmtcbntcbiAgICBjb2xvcjogIzJkMzA0Nztcbn1cblxuLnNvY2lhbC1pY29uX19saW5rOmhvdmVyLFxuLnNvY2lhbC1pY29uX19saW5rOmZvY3VzXG57XG4gICAgY29sb3I6ICM2YjcyYTI7XG59XG5cbi5ibG9nLWl0ZW1zXG57XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6ICAgICAgICAgZmxleDtcblxuICAgIG1hcmdpbi10b3A6IC0zMHB4O1xuICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xuXG4gICAgLXdlYmtpdC1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICAtbXMtZmxleC1wYWNrOiBkaXN0cmlidXRlO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5ibG9nLWl0ZW1cbntcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogICAgICAgICBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIHdpZHRoOiAtd2Via2l0LWNhbGMoMzMuMzMzMzMlIC0gMzBweCk7XG4gICAgd2lkdGg6ICAgICAgICAgY2FsYygzMy4zMzMzMyUgLSAzMHB4KTtcbiAgICBwYWRkaW5nOiAwO1xuXG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYmxvZy1pdGVtX190aXRsZVxue1xuICAgIHBhZGRpbmc6IDMwcHg7XG5cbiAgICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgIC13ZWJraXQtZmxleC1ncm93OiAxO1xuICAgIC1tcy1mbGV4LXBvc2l0aXZlOiAxO1xuICAgICAgICAgICAgZmxleC1ncm93OiAxO1xufVxuXG4uYmxvZy1pdGVtX19tZXRhXG57XG4gICAgbWFyZ2luOiBhdXRvIGF1dG8gMDtcbn1cblxuLmJsb2ctaXRlbV9fdGV4dFxue1xuICAgIHBhZGRpbmc6IDMwcHg7XG59XG5cbi5ibG9nLWl0ZW1fX21vcmVsaW5rXG57XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7XG5cbiAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgIGNvbG9yOiAjMDQ4YTgxO1xufVxuXG4uYmxvZy1pdGVtX19waG90b1xue1xuICAgIGhlaWdodDogYXV0bztcblxuICAgIC13ZWJraXQtYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIC1tcy1mbGV4LWxpbmUtcGFjazogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xufVxuXG4uYmxvZy1pdGVtX19waG90byBpbWdcbntcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLm1vcmVibG9nXG57XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuLmluYmxvZ1xue1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5ibG9nLW1ldGFcbntcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogICAgICAgICBmbGV4O1xufVxuXG4uYmxvZy1tZXRhX19pdGVtXG57XG4gICAgZm9udC1zaXplOiAuOGVtO1xuXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6ICAgICAgICAgZmxleDtcblxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcblxuICAgIGNvbG9yOiAjZTBjYTNjO1xufVxuXG4uYmxvZy1tZXRhX19zdmdcbntcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5ibG9nLW1ldGFfX2xpbmtcbntcbiAgICBjb2xvcjogI2UwY2EzYztcbn1cblxuLmluZGV4LWFib3V0XG57XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6ICAgICAgICAgZmxleDtcblxuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgcGFkZGluZzogMCAzMHB4O1xuXG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uaW5kZXgtYWJvdXRfX3Bob3RvXG57XG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuXG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtd2Via2l0LWZsZXgtZ3JvdzogMDtcbiAgICAtbXMtZmxleC1wb3NpdGl2ZTogMDtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMDtcbiAgICAtd2Via2l0LWZsZXgtYmFzaXM6IDEwMCU7XG4gICAgLW1zLWZsZXgtcHJlZmVycmVkLXNpemU6IDEwMCU7XG4gICAgICAgICAgICBmbGV4LWJhc2lzOiAxMDAlO1xuICAgIC13ZWJraXQtZmxleC1iYXNpczogMjUwcHg7XG4gICAgLW1zLWZsZXgtcHJlZmVycmVkLXNpemU6IDI1MHB4O1xuICAgICAgICAgICAgZmxleC1iYXNpczogMjUwcHg7XG59XG5cbi5pbmRleC1hYm91dF9fdGV4dFxue1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDE7XG4gICAgLXdlYmtpdC1mbGV4OiAxO1xuICAgICAgICAtbXMtZmxleDogMTtcbiAgICAgICAgICAgIGZsZXg6IDE7XG59XG5cbi5pbmRleC1hYm91dF9fbW9yZVxue1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uc2lkZWJhclxue1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxO1xuICAgIHRvcDogMjBweDtcbiAgICBib3R0b206IDA7XG5cbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogICAgICAgICBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgd2lkdGg6IC13ZWJraXQtY2FsYygzMy4zMzMzMyUgLSAzMHB4KTtcbiAgICB3aWR0aDogICAgICAgICBjYWxjKDMzLjMzMzMzJSAtIDMwcHgpO1xuICAgIG1heC13aWR0aDogMzcwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctdG9wOiA2NXB4O1xuXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA0OGE4MTtcblxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnNpZGViYXJfX2xvZ29cbntcbiAgICBtYXJnaW4tYm90dG9tOiA2NnB4O1xuXG4gICAgLXdlYmtpdC1hbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtaXRlbS1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuXG4uc2lkZWJhcl9fc2l0ZS1uYW1lXG57XG4gICAgZm9udC1zaXplOiA0MnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5zaWRlYmFyX19idG5cbntcbiAgICBmb250LXNpemU6IDIycHg7XG5cbiAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcbn1cblxuLnNpZGViYXJfX25hdlxue1xuICAgIG1hcmdpbi10b3A6IDU1cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA1NXB4O1xufVxuXG4uc2lkZWJhci1tZW51X19pdGVtXG57XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG59XG5cbi5zaWRlYmFyLW1lbnVfX2l0ZW06YmVmb3JlXG57XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogN3B4O1xuICAgIGxlZnQ6IDA7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIHdpZHRoOiAxNHB4O1xuICAgIGhlaWdodDogMTRweDtcblxuICAgIGNvbnRlbnQ6ICcnO1xuXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2UwY2EzYztcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLnNpZGViYXItbWVudV9faXRlbS0tYWN0aXZlOmJlZm9yZVxue1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGNhM2M7XG59XG5cbi5zaWRlYmFyLW1lbnVfX2xpbmtcbntcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICBjb2xvcjogI2ZkZmRmZDtcbn1cblxuLnNpZGViYXJfX3NvY2lhbC1ibG9ja1xue1xuICAgIHBhZGRpbmctcmlnaHQ6IDU0cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA1NHB4O1xuXG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uc2lkZWJhcl9fc29jaWFsLWJsb2NrIC5zb2NpYWwtaWNvbl9fbGlua1xue1xuICAgIGNvbG9yOiAjZmRmZGZkO1xufVxuXG4uc2lkZWJhcl9fc29jaWFsLWJsb2NrIC5zb2NpYWwtaWNvbl9fbGluazpmb2N1cyxcbi5zaWRlYmFyX19zb2NpYWwtYmxvY2sgLnNvY2lhbC1pY29uX19saW5rOmhvdmVyXG57XG4gICAgY29sb3I6ICNlNGU0ZTQ7XG59XG5cbi5zaWRlYmFyX19zb2NpYWwtYmxvY2sgLnNvY2lhbC1pY29uX19zdmdcbntcbiAgICBtYXgtd2lkdGg6IDUwcHg7XG59XG5cbi5zaWRlYmFyX190ZXh0LWJsb2NrXG57XG4gICAgcGFkZGluZy1yaWdodDogNDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG59XG5cbi5zaWRlYmFyX191cmdlXG57XG4gICAgZm9udC1zaXplOiAuOGVtO1xuXG4gICAgY29sb3I6ICNlMGNhM2M7XG59XG5cbi5zaWRlYmFyX19zaWduXG57XG4gICAgZm9udC1zaXplOiAuOGVtO1xuXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICBjb2xvcjogI2UwY2EzYztcbn1cblxuLnNpZGViYXJfX2Fycm93XG57XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDI7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAtNDVweDtcblxuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDcwcHg7XG4gICAgcGFkZGluZy10b3A6IDEycHg7XG5cbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDQ4YTgxO1xufVxuXG4uaWNvbi1hcnJvd1xue1xuICAgIGZvbnQtc2l6ZTogNDBweDtcblxuICAgIHotaW5kZXg6IDM7XG5cbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuNXMgbGluZWFyIC4xcztcbiAgICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAuNXMgbGluZWFyIC4xcztcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuNXMgbGluZWFyIC4xcztcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcblxuICAgIGZpbGw6ICNmZGZkZmQ7XG59XG5cbi5pY29uLWFycm93LmNsb3NlXG57XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjVzIGxpbmVhciAuMXM7XG4gICAgICAgICAtby10cmFuc2l0aW9uOiBhbGwgLjVzIGxpbmVhciAuMXM7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGxpbmVhciAuMXM7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG5cbi53aGl0ZS1ib3hfX2luZGV4XG57XG4gICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICBwYWRkaW5nOiAzMHB4IDE1cHg7XG59XG5cbi5tYWluLWJveFxue1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiAgICAgICAgIGZsZXg7XG5cbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcblxuICAgIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4ubWFpbi1jb250ZW50XG57XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3aWR0aDogLXdlYmtpdC1jYWxjKDY2LjY2NjY3JSAtIDMwcHgpO1xuICAgIHdpZHRoOiAgICAgICAgIGNhbGMoNjYuNjY2NjclIC0gMzBweCk7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtd2Via2l0LWNhbGMoMzMuMzMzMzMlICsgMTVweCk7XG4gICAgbWFyZ2luLWxlZnQ6ICAgICAgICAgY2FsYygzMy4zMzMzMyUgKyAxNXB4KTtcblxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLnBvc3RfX2ltZ1xue1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiA1MDBweDtcbn1cblxuLnBvc3RfX2hlYWRlclxue1xuICAgIHBhZGRpbmc6IDI1cHggNTBweDtcbiAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XG59XG5cbi5wb3N0X190aXRsZVxue1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5wb3N0X19jb250YWluZXJcbntcbiAgICBwYWRkaW5nOiAzMHB4IDUwcHg7XG59XG5cbi5wb3N0X19oclxue1xuICAgIHdpZHRoOiA2MCU7XG4gICAgbWFyZ2luOiAzMHB4IGF1dG87XG5cbiAgICBjb2xvcjogI2UwY2EzYztcbn1cblxuLnBvc3RfX2NvbW0tbGlua1xue1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uaW5kZXgtZm9vdGVyXG57XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDYwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDQ4YTgxO1xufVxuXG4uZm9vdGVyLWNvcHlcbntcbiAgICBmb250LXNpemU6IC41MTJlbTtcblxuICAgIG1hcmdpbi1ib3R0b206IC0ycHg7XG5cbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmZvb3Rlci1jb3B5IHBcbntcbiAgICBjb2xvcjogI2FhYWVjOTtcbn1cblxuLmZvb3Rlci1jb3B5IGFcbntcbiAgICBjb2xvcjogI2FhYWVjOTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIwMHB4KVxue1xuICAgIC5zaWRlYmFyX19zaXRlLW5hbWVcbiAgICB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzhweDtcbiAgICB9XG5cbiAgICAuc2lkZWJhcl9fYnRuXG4gICAge1xuICAgICAgICBmb250LXNpemU6IDE4cHg7XG5cbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICB9XG5cbiAgICAuc2lkZWJhcl9fbmF2XG4gICAge1xuICAgICAgICBtYXJnaW4tdG9wOiAzNXB4O1xuICAgIH1cblxuICAgIC5zaWRlYmFyX19zb2NpYWwtYmxvY2tcbiAgICB7XG4gICAgICAgIG1hcmdpbi10b3A6IC0yMHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAtMjBweDtcbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KVxue1xuICAgIC53cmFwcGVyXG4gICAge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgfVxuXG4gICAgLnNpdGUtbmFtZVxuICAgIHtcbiAgICAgICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmhlcm9cbiAgICB7XG4gICAgICAgIG1hcmdpbi10b3A6IDgwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xuICAgIH1cblxuICAgIC5oZXJvX190ZXh0XG4gICAge1xuICAgICAgICBmb250LXNpemU6IDIuNDQxZW07XG4gICAgfVxuXG4gICAgLmhlcm9fX2J0blxuICAgIHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG5cbiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAgIH1cblxuICAgIC5zaXRlLW5hbWVcbiAgICB7XG4gICAgICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgIC5ibG9nLWl0ZW1cbiAgICB7XG4gICAgICAgIHdpZHRoOiAtd2Via2l0LWNhbGMoODMuMzMzMzMlIC0gMzBweCk7XG4gICAgICAgIHdpZHRoOiAgICAgICAgIGNhbGMoODMuMzMzMzMlIC0gMzBweCk7XG4gICAgfVxuXG4gICAgLmJsb2ctaXRlbVxuICAgIHtcbiAgICAgICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLnNpZGViYXJcbiAgICB7XG4gICAgICAgIHdpZHRoOiAzNzBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0zNTBweDtcblxuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IG1hcmdpbi1sZWZ0IC41cyBsaW5lYXIgLjFzO1xuICAgICAgICAgICAgIC1vLXRyYW5zaXRpb246IG1hcmdpbi1sZWZ0IC41cyBsaW5lYXIgLjFzO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi1sZWZ0IC41cyBsaW5lYXIgLjFzO1xuICAgIH1cblxuICAgIC5zaWRlYmFyLm1vYmlsZVxuICAgIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLnNpZGViYXJfX2Fycm93XG4gICAge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAubWFpbi1jb250ZW50XG4gICAge1xuICAgICAgICB3aWR0aDogLXdlYmtpdC1jYWxjKDkxLjY2NjY3JSAtIDMwcHgpO1xuICAgICAgICB3aWR0aDogICAgICAgICBjYWxjKDkxLjY2NjY3JSAtIDMwcHgpO1xuICAgIH1cblxuICAgIC5tYWluLWNvbnRlbnRcbiAgICB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtd2Via2l0LWNhbGMoOC4zMzMzMyUgKyAxNXB4KTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6ICAgICAgICAgY2FsYyg4LjMzMzMzJSArIDE1cHgpO1xuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzIwcHgpXG57XG4gICAgYm9keVxuICAgIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIH1cblxuICAgIC50b3AtbGluZSA+ICpcbiAgICB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC5uYXYtdG9wX19saW5rXG4gICAge1xuICAgICAgICBmb250LXNpemU6IDE5cHg7XG4gICAgfVxuXG4gICAgLmhlcm9cbiAgICB7XG4gICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA1MHB4O1xuICAgIH1cblxuICAgIC5oZXJvX190ZXh0XG4gICAge1xuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIH1cblxuICAgIC5oZXJvX19idG5cbiAgICB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB9XG5cbiAgICAudG9wLWxpbmUgPiAqXG4gICAge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAubmF2LXRvcF9fbGlua1xuICAgIHtcbiAgICAgICAgZm9udC1zaXplOiAxOXB4O1xuICAgIH1cblxuICAgIC5zb2NpYWwtaWNvbl9fc3ZnXG4gICAge1xuICAgICAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweClcbntcbiAgICAudG9wLWxpbmVcbiAgICB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLnRvcC1saW5lID4gKlxuICAgIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgIC5zaXRlLW5hbWVcbiAgICB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDY4cHg7XG4gICAgfVxuXG4gICAgLm5hdi10b3BcbiAgICB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcblxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDQ4YTgxO1xuXG4gICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLm5hdi10b3AtLW1vYmlsZVxuICAgIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAubmF2LXRvcF9faXRlbVxuICAgIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLmJ1cmdlci10b3BcbiAgICB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC5oZXJvX190ZXh0XG4gICAge1xuICAgICAgICBmb250LXNpemU6IDEuNTYzZW07XG4gICAgfVxuXG4gICAgLmhlcm9fX2J0blxuICAgIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB9XG5cbiAgICAudG9wLWxpbmVcbiAgICB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLnRvcC1saW5lID4gKlxuICAgIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgIC5zaXRlLW5hbWVcbiAgICB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDY4cHg7XG4gICAgfVxuXG4gICAgLm5hdi10b3BcbiAgICB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcblxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDQ4YTgxO1xuXG4gICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLm5hdi10b3AtLW1vYmlsZVxuICAgIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAubmF2LXRvcF9faXRlbVxuICAgIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgLmJ1cmdlci10b3BcbiAgICB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC5zb2NpYWwtaWNvbl9faW5kZXhcbiAgICB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgfVxuXG4gICAgLnNvY2lhbC1pY29uX19zdmdcbiAgICB7XG4gICAgICAgIG1heC13aWR0aDogNTBweDtcbiAgICB9XG5cbiAgICAuYmxvZy1pdGVtX190aXRsZVxuICAgIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjU2M2VtO1xuICAgIH1cblxuICAgIC5ibG9nLW1ldGFfX2l0ZW1cbiAgICB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB9XG5cbiAgICAuaW5kZXgtYWJvdXRcbiAgICB7XG4gICAgICAgIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgIC5zaWRlYmFyXG4gICAge1xuICAgICAgICB0b3A6IDEwcHg7XG5cbiAgICAgICAgd2lkdGg6IDI3MHB4O1xuICAgICAgICBtYXJnaW4tbGVmdDogLTI2MHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIH1cblxuICAgIC5zaWRlYmFyX19sb2dvXG4gICAge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIH1cblxuICAgIC5zaWRlYmFyX19idG5cbiAgICB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgfVxuXG4gICAgLnNpZGViYXJfX25hdlxuICAgIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICB9XG5cbiAgICAuc2lkZWJhcl9fc29jaWFsLWJsb2NrXG4gICAge1xuICAgICAgICBtYXJnaW4tdG9wOiAtMzVweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLTM1cHg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDI1cHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMjVweDtcbiAgICB9XG5cbiAgICAubWFpbi1ib3hcbiAgICB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIH1cblxuICAgIC5wb3N0X190aXRsZVxuICAgIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjk1M2VtO1xuICAgIH1cblxuICAgIC5wb3N0X19jb250YWluZXJcbiAgICB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgfVxufVxuIiwiJGNvbHVtbnM6IDEyO1xuJGF0b206ICgxMDAlIC8gJGNvbHVtbnMpO1xuXG4kYnJlYWtfbGc6IDEyMDBweDtcbiRicmVha19tZDogOTkycHg7XG4kYnJlYWtfc206IDcyMHB4O1xuJGJyZWFrX3hzOiA1NzZweDtcblxuJG9mZnNldDogMzBweDtcbiRvZmZzZXRfbGc6ICRvZmZzZXQ7XG4kb2Zmc2V0X21kOiAkb2Zmc2V0O1xuJG9mZnNldF9zbTogJG9mZnNldDtcbiRvZmZzZXRfeHM6ICRvZmZzZXQ7XG5cbiRvZmZzZXRfb25lX3NpZGU6ICgkb2Zmc2V0IC8gMik7XG4kb2Zmc2V0X2xnX29uZV9zaWRlOiAoJG9mZnNldF9sZyAvIDIpO1xuJG9mZnNldF9tZF9vbmVfc2lkZTogKCRvZmZzZXRfbWQgLyAyKTtcbiRvZmZzZXRfc21fb25lX3NpZGU6ICgkb2Zmc2V0X3NtIC8gMik7XG4kb2Zmc2V0X3hzX29uZV9zaWRlOiAoJG9mZnNldF94cyAvIDIpO1xuXG4kZmllbGRzOiAxNXB4O1xuJGZpZWxkc19tZDogMTVweDtcblxuQG1peGluIHdyYXBwZXItZnVsbCgpIHtcbiAgICBwYWRkaW5nLWxlZnQ6ICRmaWVsZHM7XG4gICAgcGFkZGluZy1yaWdodDogJGZpZWxkcztcblxuICAgIEBpbmNsdWRlIG1kLWJsb2NrKCkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRmaWVsZHNfbWQ7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6ICRmaWVsZHNfbWQ7IH0gfVxuXG5AbWl4aW4gcm93LW9mZnNldHMoKSB7XG4gICAgbWFyZ2luLWxlZnQ6ICgkb2Zmc2V0X29uZV9zaWRlICogLTEpO1xuICAgIG1hcmdpbi1yaWdodDogKCRvZmZzZXRfb25lX3NpZGUgKiAtMSk7IH1cblxuQG1peGluIGNvbC1vZmZzZXRzKCR0eXBlKSB7XG4gICAgI3skdHlwZX0tbGVmdDogJG9mZnNldF9vbmVfc2lkZTtcbiAgICAjeyR0eXBlfS1yaWdodDogJG9mZnNldF9vbmVfc2lkZTsgfVxuXG5AbWl4aW4gd3JhcHBlcigpIHtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBAaW5jbHVkZSB3cmFwcGVyLWZ1bGwoKTsgfVxuXG5AbWl4aW4gcm93LWZsZXgoKSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgQGluY2x1ZGUgcm93LW9mZnNldHMoKTsgfVxuXG5AbWl4aW4gcm93LWZsb2F0KCkge1xuICAgIEBpbmNsdWRlIHJvdy1vZmZzZXRzKCk7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTsgfVxuXG5AbWl4aW4gcm93LWliKCkge1xuICAgIEBpbmNsdWRlIHJvdy1vZmZzZXRzKCk7IH1cblxuQG1peGluIGNvbCgpIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBAaW5jbHVkZSBjb2wtb2Zmc2V0cyhtYXJnaW4pOyB9XG5cbkBtaXhpbiBjb2wtZmxvYXQoKSB7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cblxuQG1peGluIGNvbC1pYigpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG5AbWl4aW4gY29sLXBhZGRpbmcoKSB7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIEBpbmNsdWRlIGNvbC1vZmZzZXRzKHBhZGRpbmcpOyB9XG5cbkBtaXhpbiBzaXplKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgd2lkdGg6ICN7Y2FsYygjeyR2YWx9IC0gI3skb2Zmc2V0fSl9OyB9XG5cbkBtaXhpbiBzaXplLWxnKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbGcod2lkdGgsICN7Y2FsYygjeyR2YWx9IC0gI3skb2Zmc2V0X2xnfSl9KTsgfVxuXG5AbWl4aW4gc2l6ZS1tZCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIG1kKHdpZHRoLCAje2NhbGMoI3skdmFsfSAtICN7JG9mZnNldF9tZH0pfSk7IH1cblxuQG1peGluIHNpemUtc20oJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBzbSh3aWR0aCwgI3tjYWxjKCN7JHZhbH0gLSAjeyRvZmZzZXRfc219KX0pOyB9XG5cbkBtaXhpbiBzaXplLXhzKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgeHMod2lkdGgsICN7Y2FsYygjeyR2YWx9IC0gI3skb2Zmc2V0X3hzfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBtYXJnaW4tbGVmdDogI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfb25lX3NpZGV9KX07XG4gICAgbWFyZ2luLXJpZ2h0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTsgfVxuXG5AbWl4aW4gc2hpZnQtbGVmdCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIG1hcmdpbi1sZWZ0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTsgfVxuXG5AbWl4aW4gc2hpZnQtcmlnaHQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBtYXJnaW4tcmlnaHQ6ICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X29uZV9zaWRlfSl9OyB9XG5cbkBtaXhpbiBzaGlmdC1wYWRkaW5nKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgcGFkZGluZy1sZWZ0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTsgfVxuXG5AbWl4aW4gc2hpZnQtcGFkZGluZy1sZWZ0KCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgcGFkZGluZy1sZWZ0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTsgfVxuXG5AbWl4aW4gc2hpZnQtcGFkZGluZy1yaWdodCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIHBhZGRpbmctcmlnaHQ6ICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X29uZV9zaWRlfSl9OyB9XG5cbkBtaXhpbiBzaGlmdC1sZygkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIGxnKG1hcmdpbi1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9sZ19vbmVfc2lkZX0pfSk7XG4gICAgQGluY2x1ZGUgbGcobWFyZ2luLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9sZ19vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LWxnLWxlZnQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBsZyhtYXJnaW4tbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbGdfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC1sZy1yaWdodCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIGxnKG1hcmdpbi1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbGdfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC1sZy1wYWRkaW5nKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbGcocGFkZGluZy1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9sZ19vbmVfc2lkZX0pfSk7XG4gICAgQGluY2x1ZGUgbGcocGFkZGluZy1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbGdfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC1sZy1wYWRkaW5nLWxlZnQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBsZyhwYWRkaW5nLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X2xnX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQtbGctcGFkZGluZy1yaWdodCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIGxnKHBhZGRpbmctcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X2xnX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQtbWQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBtZChtYXJnaW4tbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbWRfb25lX3NpZGV9KX0pO1xuICAgIEBpbmNsdWRlIG1kKG1hcmdpbi1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbWRfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC1tZC1sZWZ0KCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbWQobWFyZ2luLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X21kX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQtbWQtcmlnaHQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBtZChtYXJnaW4tcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X21kX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQtbWQtcGFkZGluZygkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIG1kKHBhZGRpbmctbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbWRfb25lX3NpZGV9KX0pO1xuICAgIEBpbmNsdWRlIG1kKHBhZGRpbmctcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X21kX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQtbWQtcGFkZGluZy1sZWZ0KCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbWQocGFkZGluZy1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9tZF9vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LW1kLXBhZGRpbmctcmlnaHQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBtZChwYWRkaW5nLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9tZF9vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LXNtKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgc20obWFyZ2luLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3NtX29uZV9zaWRlfSl9KTtcbiAgICBAaW5jbHVkZSBzbShtYXJnaW4tcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3NtX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQtc20tbGVmdCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHNtKG1hcmdpbi1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9zbV9vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LXNtLXJpZ2h0KCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgc20obWFyZ2luLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9zbV9vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LXNtLXBhZGRpbmcoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBzbShwYWRkaW5nLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3NtX29uZV9zaWRlfSl9KTtcbiAgICBAaW5jbHVkZSBzbShwYWRkaW5nLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9zbV9vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LXNtLXBhZGRpbmctbGVmdCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHNtKHBhZGRpbmctbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfc21fb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC1zbS1wYWRkaW5nLXJpZ2h0KCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgc20ocGFkZGluZy1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfc21fb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC14cygkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHhzKG1hcmdpbi1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF94c19vbmVfc2lkZX0pfSk7XG4gICAgQGluY2x1ZGUgeHMobWFyZ2luLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF94c19vbmVfc2lkZX0pfSk7IH1cblxuQG1peGluIHNoaWZ0LXhzLWxlZnQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSB4cyhtYXJnaW4tbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfeHNfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC14cy1yaWdodCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHhzKG1hcmdpbi1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfeHNfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC14cy1wYWRkaW5nKCRuKSB7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgeHMocGFkZGluZy1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF94c19vbmVfc2lkZX0pfSk7XG4gICAgQGluY2x1ZGUgeHMocGFkZGluZy1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfeHNfb25lX3NpZGV9KX0pOyB9XG5cbkBtaXhpbiBzaGlmdC14cy1wYWRkaW5nLWxlZnQoJG4pIHtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSB4cyhwYWRkaW5nLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3hzX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gc2hpZnQteHMtcGFkZGluZy1yaWdodCgkbikge1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHhzKHBhZGRpbmctcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3hzX29uZV9zaWRlfSl9KTsgfVxuXG5AbWl4aW4gbGcoJG5hbWUsICR2YWx1ZSkge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha19sZykge1xuICAgICAgICAjeyRuYW1lfTogJHZhbHVlOyB9IH1cblxuQG1peGluIGxnLWJsb2NrKCkge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha19sZykge1xuICAgICAgICBAY29udGVudDsgfSB9XG5cbkBtaXhpbiBtZCgkbmFtZSwgJHZhbHVlKSB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJGJyZWFrX21kKSB7XG4gICAgICAgICN7JG5hbWV9OiAkdmFsdWU7IH0gfVxuXG5AbWl4aW4gbWQtYmxvY2soKSB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJGJyZWFrX21kKSB7XG4gICAgICAgIEBjb250ZW50OyB9IH1cblxuQG1peGluIHNtKCRuYW1lLCAkdmFsdWUpIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkYnJlYWtfc20pIHtcbiAgICAgICAgI3skbmFtZX06ICR2YWx1ZTsgfSB9XG5cbkBtaXhpbiBzbS1ibG9jaygpIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkYnJlYWtfc20pIHtcbiAgICAgICAgQGNvbnRlbnQ7IH0gfVxuXG5AbWl4aW4geHMoJG5hbWUsICR2YWx1ZSkge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha194cykge1xuICAgICAgICAjeyRuYW1lfTogJHZhbHVlOyB9IH1cblxuQG1peGluIHhzLWJsb2NrKCkge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha194cykge1xuICAgICAgICBAY29udGVudDsgfSB9XG5cbkBtaXhpbiBmcm9tKCRtaW5fd2lkdGgpIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWluX3dpZHRoKSB7XG4gICAgICAgIEBjb250ZW50OyB9IH1cblxuQG1peGluIHRvKCRtYXhfd2lkdGgpIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbWF4X3dpZHRoKSB7XG4gICAgICAgIEBjb250ZW50OyB9IH1cblxuQG1peGluIGZyb20tdG8oJG1pbl93aWR0aCwgJG1heF93aWR0aCkge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtaW5fd2lkdGgpIGFuZCAobWF4LXdpZHRoOiAkbWF4X3dpZHRoKSB7XG4gICAgICAgIEBjb250ZW50OyB9IH1cblxuQG1peGluIHUtcm93LWZsZXgoJG9mZnNldCkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbi1sZWZ0OiAoJG9mZnNldCAvIC0yKTtcbiAgICBtYXJnaW4tcmlnaHQ6ICgkb2Zmc2V0IC8gLTIpOyB9XG5cbkBtaXhpbiB1LWNvbCgkb2Zmc2V0KSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgbWFyZ2luLWxlZnQ6ICgkb2Zmc2V0IC8gMik7XG4gICAgbWFyZ2luLXJpZ2h0OiAoJG9mZnNldCAvIDIpOyB9XG5cbkBtaXhpbiB1LXNpemUoJG4sICRjb2x1bW5zLCAkb2Zmc2V0KSB7XG4gICAgd2lkdGg6ICN7Y2FsYygxMDAlIC8gI3skY29sdW1uc30gKiAjeyRufSAtICN7JG9mZnNldH0pfTsgfVxuXG5AbWl4aW4gcmVzZXQoKSB7XG4gICAgYm9keSxkaXYsZGwsZHQsZGQsdWwsbGksaDEsaDIsaDMsaDQsaDUsaDYscHJlLGNvZGUsZm9ybSxmaWVsZHNldCxpbnB1dCx0ZXh0YXJlYSxwLGJsb2NrcXVvdGUsdGgsdGQge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7IH1cblxuICAgIHRhYmxlIHtcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICAgICAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuICAgIGZpZWxkc2V0LGltZyxhYmJyIHtcbiAgICAgICAgYm9yZGVyOiAwOyB9XG5cbiAgICBhZGRyZXNzLGNhcHRpb24sY2l0ZSxjb2RlLGRmbixlbSxzdHJvbmcsdGgsdmFyIHtcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbiAgICB1bCBsaSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuICAgIGNhcHRpb24sdGgge1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbiAgICBoMSxoMixoMyxoNCxoNSxoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG4gICAgc3VwIHtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wOyB9XG5cbiAgICBzdWIge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207IH1cblxuICAgIGlucHV0LHRleHRhcmVhLHNlbGVjdCB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbiAgICBsZWdlbmQge1xuICAgICAgICBjb2xvcjogIzAwMDsgfVxuXG4gICAgYXJ0aWNsZSxhc2lkZSxkZXRhaWxzLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG1lbnUsbmF2LHNlY3Rpb24sbWFpbiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbiAgICBpbWcge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bzsgfSB9XG5cbkBtaXhpbiBkZWJ1ZygkYmFja2dyb3VuZCwgJG91dGxpbmUpIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgID4gZGl2IHtcbiAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBAaW5jbHVkZSB3cmFwcGVyKCk7XG5cbiAgICAgICAgPiBkaXYge1xuICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgQGluY2x1ZGUgcm93LWZsZXgoKTtcblxuICAgICAgICAgICAgPiBkaXYge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNvbCgpO1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHNpemUoMSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgICAgIG91dGxpbmU6ICRvdXRsaW5lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kOyB9IH0gfSB9XG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcbiAgICAmOjphZnRlciB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBjbGVhcjogYm90aDsgfSB9XG5cbiIsIi5zaXRlLW5hbWUge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDg0cHg7XG4gICAgY29sb3I6ICRsaWdodC1jb2xvcjtcbiAgICAmIHNwYW4ge1xuICAgICAgICBjb2xvcjogJGFjY2VudC1jb2xvcjsgfSB9XG5cblxuLnNvY2lhbC1pY29uIHtcblxuICAgIG1heC13aWR0aDogMTAwcHg7XG5cblxuICAgICZfX2xpbmsge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cblxuICAgICAgICAmOmhvdmVyLCAmOmZvY3VzIHt9IH1cblxuXG4gICAgJl9fc3ZnIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgICAgICAgaGVpZ2h0OiBhdXRvOyB9IH1cblxuXG4iLCIuaWNvbiB7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0d2lkdGg6IDFlbTtcblx0aGVpZ2h0OiAxZW07XG5cdGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLmljb24tYXJyb3cge1xuXHRmb250LXNpemU6KDUxMy4zMi8xMCkqMXJlbTtcblx0d2lkdGg6KDUxMy4zMi81MTMuMzIpKjFlbTtcbn1cbi5pY29uLWNhbGVuZGFyIHtcblx0Zm9udC1zaXplOigyMy8xMCkqMXJlbTtcblx0d2lkdGg6KDE1LzIzKSoxZW07XG59XG4uaWNvbi1jb21tZW50IHtcblx0Zm9udC1zaXplOigyMy8xMCkqMXJlbTtcblx0d2lkdGg6KDE1LzIzKSoxZW07XG59XG4uaWNvbi1kcml2ZTIge1xuXHRmb250LXNpemU6KDEwMC8xMCkqMXJlbTtcblx0d2lkdGg6KDEwMC8xMDApKjFlbTtcbn1cbi5pY29uLWluc3RhZ3JhbSB7XG5cdGZvbnQtc2l6ZTooMTAwLzEwKSoxcmVtO1xuXHR3aWR0aDooMTAwLzEwMCkqMWVtO1xufVxuLmljb24tdmlldyB7XG5cdGZvbnQtc2l6ZTooMjMvMTApKjFyZW07XG5cdHdpZHRoOigxNS8yMykqMWVtO1xufVxuLmljb24tdmsge1xuXHRmb250LXNpemU6KDEwMC8xMCkqMXJlbTtcblx0d2lkdGg6KDEwMC8xMDApKjFlbTtcbn1cbi5pY29uLXlvdXR1YmUge1xuXHRmb250LXNpemU6KDEwMC8xMCkqMXJlbTtcblx0d2lkdGg6KDEwMC8xMDApKjFlbTtcbn1cbiIsIi5oZWFkZXJfX2luZGV4IHtcbiAgICAvLyBtaW4taGVpZ2h0OiAxMDB2aFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2hlcm8tYmcuanBnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgdG9wO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDEwMDBweCB0cmFuc3BhcmVudGl6ZSgkc2Vjb25kLWNvbG9yLDAuMik7IH1cblxuLnRvcC1saW5lIHtcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgIHBhZGRpbmctbGVmdDogMzBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgQGluY2x1ZGUgeHMtYmxvY2soKSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICAgICAgcGFkZGluZy10b3A6IDMwcHg7IH1cblxuICAgICYgPiAqIHtcbiAgICAgICAgQGluY2x1ZGUgbWQtYmxvY2soKTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jayB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuICAgICAgICBAaW5jbHVkZSBzbS1ibG9jaygpIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlOyB9IH0gfVxuXG4uc2l0ZS1uYW1lIHtcblxuICAgIEBpbmNsdWRlIG1kLWJsb2NrKCkge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4gICAgLy8rc2l6ZS1tZCgxMilcblxuICAgIEBpbmNsdWRlIHhzLWJsb2NrKCkge1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA2OHB4OyB9IH1cblxuXG5cblxuLm5hdi10b3Age1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLy8rc2l6ZS1tZCgxMilcbiAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kLWNvbG9yO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4OyB9XG5cblxuICAgICYtLW1vYmlsZSB7XG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrKCkge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbiAgICAmX19pdGVtIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMDsgfVxuXG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cblxuXG4gICAgJl9fbGluayB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6ICRsaWdodC1jb2xvcjtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogNDJweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIEBpbmNsdWRlIHNtLWJsb2NrKCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOXB4OyB9XG5cbiAgICAgICAgJjpob3ZlciwgJjpmb2N1cywgJi5hY3RpdmUge1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7XG4gICAgICAgICAgICBjb2xvcjogZGFya2VuKCRsaWdodC1jb2xvciwgMTApOyB9IH0gfVxuXG4uYnVyZ2VyLXRvcCB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRsaWdodC1jb2xvcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAtMzZweDtcbiAgICByaWdodDogMDtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgJjpiZWZvcmUsICY6YWZ0ZXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgJGFjY2VudC1jb2xvcjtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIGxpbmVhciAwLjNzOyB9XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIHRvcDogLTEycHg7IH1cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgdG9wOiA5cHg7IH1cblxuICAgICYtLWFjdGl2ZSB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcblxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgICB0b3A6IDBweDsgfVxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgICB0b3A6IDBweDsgfSB9XG4gICAgQGluY2x1ZGUgeHMtYmxvY2soKSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiIsIi5oZXJvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmctbGVmdDogMzBweDtcblxuICAgIEBpbmNsdWRlIG1kLWJsb2NrKCkge1xuICAgICAgICBtYXJnaW4tdG9wOiA4MHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogODBweDsgfVxuICAgIEBpbmNsdWRlIHNtLWJsb2NrKCkge1xuICAgICAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDsgfVxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICBtYXJnaW4tdG9wOiAxNTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTUwcHg7XG5cbiAgICAmX19pbmZvIHt9XG5cblxuICAgICZfX3RleHQge1xuICAgICAgICBmb250LXNpemU6ICRoMTtcbiAgICAgICAgY29sb3I6ICRsaWdodC1jb2xvcjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuOTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICAgICAgbWF4LXdpZHRoOiA4MCU7XG4gICAgICAgIEBpbmNsdWRlIG1kLWJsb2NrKCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAkaDI7IH1cbiAgICAgICAgQGluY2x1ZGUgc20tYmxvY2soKSB7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41OyB9XG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGg0OyB9IH1cblxuICAgICZfX2J0biB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgICAgICBAaW5jbHVkZSBzbS1ibG9jaygpIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsgfVxuICAgICAgICBAaW5jbHVkZSBtZC1ibG9jaygpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHA7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9XG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH0gfSB9XG5cbiIsIlxuLnNvY2lhbC1ibG9jayB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDsgfVxuXG4uc29jaWFsLWljb25fX3BhZ2Uge1xuICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4uc29jaWFsLWljb25fX2luZGV4IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7XG5cbiAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsgfSB9XG5cbi5zb2NpYWwtaWNvbiB7XG4gICAgJl9fbGluayB7XG4gICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcblxuXG4gICAgICAgICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJG1haW4tY29sb3IsIDMwKTsgfSB9XG5cblxuICAgICZfX3N2ZyB7XG4gICAgICAgIEBpbmNsdWRlIHNtLWJsb2NrKCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA4MHB4OyB9XG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogNTBweDsgfSB9IH1cblxuIiwiLmJsb2ctaXRlbXMge1xuICAgIG1hcmdpbi10b3A6IC0zMHB4O1xuICAgIEBpbmNsdWRlIHJvdy1mbGV4KCk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7IH1cblxuLmJsb2ctaXRlbSB7XG4gICAgQGluY2x1ZGUgc2l6ZSg0KTtcbiAgICBAaW5jbHVkZSBzaXplLW1kKDEwKTtcbiAgICBAaW5jbHVkZSBtZC1ibG9jaygpIHtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICBwYWRkaW5nOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICZfX3RpdGxlIHtcbiAgICAgICAgcGFkZGluZzogMzBweDtcbiAgICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGg0OyB9IH1cblxuICAgICZfX21ldGEge1xuXG4gICAgICAgIG1hcmdpbjogYXV0byBhdXRvIDBweDsgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICAgIHBhZGRpbmc6IDMwcHg7IH1cblxuICAgICZfX21vcmVsaW5rIHtcbiAgICAgICAgY29sb3I6ICRzZWNvbmQtY29sb3I7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW4tdG9wOiBhdXRvO1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMzBweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDMwcHg7IH1cblxuICAgICZfX3Bob3RvIHtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9IH1cblxuXG4ubW9yZWJsb2cge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7IH1cblxuLmluYmxvZyB7XG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cblxuLmJsb2ctbWV0YSB7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgICZfX2l0ZW0ge1xuICAgICAgICAvLyBtYXJnaW4tbGVmdDogMjBweFxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogJHNtO1xuICAgICAgICBjb2xvcjogJGFjY2VudC1jb2xvcjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsgfSB9XG5cbiAgICAmX19zdmcge1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNXB4OyB9XG5cbiAgICAmX19saW5rIHtcbiAgICAgICAgY29sb3I6ICRhY2NlbnQtY29sb3I7IH0gfVxuIiwiLmluZGV4LWFib3V0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgIHBhZGRpbmc6IDAgMzBweDtcbiAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4gICAgJl9fcGhvdG8ge1xuICAgICAgICBmbGV4LWdyb3c6IDA7XG4gICAgICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcbiAgICAgICAgZmxleC1iYXNpczogMjUwcHg7IH1cblxuICAgICZfX3RleHQge1xuICAgICAgICBmbGV4OiAxOyB9XG4gICAgJl9fbW9yZSB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9IH1cblxuXG4iLCJcblxuXG4uc2lkZWJhciB7XG4gICAgQGluY2x1ZGUgY29sKCk7XG4gICAgQGluY2x1ZGUgc2l6ZSg0KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kLWNvbG9yO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBib3R0b206IDA7XG4gICAgdG9wOiAyMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nLXRvcDogNjVweDtcbiAgICBtYXgtd2lkdGg6IDM3MHB4O1xuICAgIHotaW5kZXg6IDE7XG4gICAgQGluY2x1ZGUgbWQtYmxvY2soKSB7XG4gICAgICAgIHdpZHRoOiAzNzBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0zNTBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLWxlZnQgMC41cyBsaW5lYXIgMC4xczsgfVxuXG4gICAgQGluY2x1ZGUgeHMtYmxvY2soKSB7XG4gICAgICAgIHdpZHRoOiAyNzBweDtcbiAgICAgICAgcGFkZGluZy10b3A6IDVweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0yNjBweDtcbiAgICAgICAgdG9wOiAxMHB4OyB9XG5cbiAgICAmLm1vYmlsZSB7XG4gICAgICAgIEBpbmNsdWRlIG1kLWJsb2NrKCkge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH0gfVxuXG4gICAgJl9fbG9nbyB7XG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNjZweDtcblxuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IH0gfVxuXG4gICAgJl9fc2l0ZS1uYW1lIHtcbiAgICAgICAgZm9udC1zaXplOiA0MnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICBAaW5jbHVkZSBsZy1ibG9jaygpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzhweDsgfSB9XG5cbiAgICAmX19idG4ge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBmb250LXNpemU6IDIycHg7XG4gICAgICAgIEBpbmNsdWRlIGxnLWJsb2NrKCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9IH1cblxuICAgICZfX25hdiB7XG4gICAgICAgIG1hcmdpbi10b3A6IDU1cHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogNTVweDtcbiAgICAgICAgQGluY2x1ZGUgbGctYmxvY2soKSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAzNXB4OyB9XG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrKCkge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDsgfSB9XG5cbiAgICAmLW1lbnUge1xuXG4gICAgICAgICZfX2l0ZW0ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAkaDU7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgICB0b3A6IDdweDtcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgICAgICB3aWR0aDogMTRweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7IH1cbiAgICAgICAgICAgICYtLWFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yOyB9IH0gfVxuXG4gICAgICAgICZfX2xpbmsge1xuICAgICAgICAgICAgY29sb3I6ICRsaWdodC1jb2xvcjtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfSB9XG5cbiAgICAmX19zb2NpYWwtYmxvY2sge1xuXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDU0cHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogNTRweDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgICAgIEBpbmNsdWRlIGxnLWJsb2NrKCkge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTIwcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtMjBweDsgfVxuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDI1cHg7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAtMzVweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0zNXB4OyB9XG5cbiAgICAgICAgLnNvY2lhbC1pY29uIHtcbiAgICAgICAgICAgICZfX2xpbmsge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkbGlnaHQtY29sb3I7XG5cbiAgICAgICAgICAgICAgICAmOmZvY3VzLCAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGRhcmtlbigkbGlnaHQtY29sb3IsIDEwKTsgfSB9XG5cbiAgICAgICAgICAgICZfX3N2ZyB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA1MHB4OyB9IH0gfVxuXG4gICAgJl9fdGV4dC1ibG9jayB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogNDBweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNDBweDsgfVxuXG4gICAgJl9fdXJnZSB7XG4gICAgICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yO1xuICAgICAgICBmb250LXNpemU6ICRzbTsgfVxuXG4gICAgJl9fc2lnbiB7XG4gICAgICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yO1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgZm9udC1zaXplOiAkc207IH1cblxuICAgICZfX2Fycm93IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgaGVpZ2h0OiA3MHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kLWNvbG9yO1xuICAgICAgICByaWdodDogLTQ1cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICBwYWRkaW5nLXRvcDogMTJweDtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgQGluY2x1ZGUgbWQtYmxvY2soKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9IH1cblxuLmljb24tYXJyb3cge1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICB6LWluZGV4OiAzO1xuICAgIGZpbGw6ICRsaWdodC1jb2xvcjtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBsaW5lYXIgMC4xcztcblxuICAgICYuY2xvc2Uge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBsaW5lYXIgMC4xczsgfSB9XG4iLCJAaW1wb3J0IFwiLi4vY29tcG9uZW50cy9oZXJvXCI7XG5AaW1wb3J0IFwiLi4vY29tcG9uZW50cy9oZWFkZXJcIjtcbkBpbXBvcnQgXCIuLi9jb21wb25lbnRzL3NvY2lhbFwiO1xuQGltcG9ydCBcIi4uL2NvbXBvbmVudHMvYmxvZy1pdGVtc1wiO1xuQGltcG9ydCBcIi4uL2NvbXBvbmVudHMvYWJvdXQtaW5kZXhcIjtcbkBpbXBvcnQgXCIuLi9jb21wb25lbnRzL3NpZGViYXJcIjtcblxuLndoaXRlLWJveF9faW5kZXgge1xuICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgcGFkZGluZzogMzBweCAxNXB4OyB9XG4iLCIkZGVidWctY29sb3I6IHJnYmEoI2NjY2NjYywgMC4yKTtcblxuLm1haW4tYm94IHtcbiAgICBAaW5jbHVkZSByb3ctZmxleCgpO1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7IH0gfVxuXG5cbi5tYWluLWNvbnRlbnQge1xuICAgIEBpbmNsdWRlIGNvbCgpO1xuICAgIEBpbmNsdWRlIHNpemUoOCk7XG4gICAgQGluY2x1ZGUgc2hpZnQtbGVmdCg0KTtcbiAgICBAaW5jbHVkZSBzaXplLW1kKDExKTtcbiAgICBAaW5jbHVkZSBzaGlmdC1tZC1sZWZ0KDEpOyB9XG5cbi5wb3N0IHtcbiAgICAmX19pbWcge1xuICAgICAgICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgaGVpZ2h0OiBhdXRvOyB9XG5cbiAgICAmX19oZWFkZXIge1xuICAgICAgICBwYWRkaW5nOiAyNXB4IDUwcHg7XG4gICAgICAgIEBpbmNsdWRlIHhzLWJsb2NrKCk7XG4gICAgICAgIHBhZGRpbmc6IDE1cHggMjBweDsgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICBAaW5jbHVkZSB4cy1ibG9jaygpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGgzOyB9IH1cblxuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgIHBhZGRpbmc6IDMwcHggNTBweDtcbiAgICAgICAgQGluY2x1ZGUgeHMtYmxvY2soKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4OyB9IH1cblxuICAgICZfX2hyIHtcbiAgICAgICAgY29sb3I6ICRhY2NlbnQtY29sb3I7XG4gICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgIG1hcmdpbjogMzBweCBhdXRvOyB9XG5cbiAgICAmX19jb21tLWxpbmsge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsgfSB9XG4iLCIuaW5kZXgtZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kLWNvbG9yO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjBweDtcbiAgICBtYXJnaW4tdG9wOiA2MHB4OyB9XG5cblxuLmZvb3Rlci1jb3B5IHtcbiAgICBmb250LXNpemU6ICR4cztcbiAgICBtYXJnaW4tYm90dG9tOiAtMnB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuXG4gICAgJiBwIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJG1haW4tY29sb3IsIDUwKTsgfVxuXG4gICAgJiBhIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJG1haW4tY29sb3IsIDUwKTsgfSB9XG4iXX0= */
