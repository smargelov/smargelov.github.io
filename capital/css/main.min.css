@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900&display=swap&subset=cyrillic");blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-spacing:0;border-collapse:collapse}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-weight:400;font-style:normal}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}.wrapper{max-width:1170px;margin:0 auto;padding-right:30px;padding-left:30px}*{box-sizing:border-box}body{font-size:14px}.btn,body{font-family:Roboto,sans-serif}.btn{font-size:16px;font-weight:bolder;line-height:40px;padding-right:23px;padding-left:23px;cursor:pointer;border:none;border-radius:24px;background-color:#fcd200}.h2{font-size:30px;line-height:30px}.icon{display:inline-block;width:1em;height:1em;fill:currentColor}.icon-advant-bag{font-size:6.5rem;width:1.13846em}.icon-advant-bank{font-size:8.6rem;width:.95349em}.icon-advant-gold{font-size:7.4rem;width:1.21622em}.icon-advant-hand{font-size:20.3rem;width:1.00985em}.icon-advant-insur{font-size:7.5rem;width:.78667em}.icon-advant-partner{font-size:7rem;width:1.02857em}.icon-advant-safe{font-size:7.2rem;width:1.04167em}.icon-header-calendar{font-size:3.6rem;width:1em}.icon-logo-cd{font-size:127rem;width:1.51181em}.icon-prog-arrow-left,.icon-prog-arrow-right{font-size:2.3rem;width:1.3913em}.icon-prog-calc{font-size:13.4rem;width:.76119em}.icon-prog-calendar{font-size:12.4rem;width:1.08871em}.icon-prog-purse{font-size:10.7rem;width:1.36449em}.header-logo__img{max-width:234px;margin-right:20px}.header-logo__desc{font-size:17px;font-weight:400;line-height:18px;max-width:183px;padding-left:18px;text-transform:uppercase;border-left:2px solid #000}.header__topline{padding-top:25px;padding-bottom:5px;-ms-flex-pack:justify;justify-content:space-between}.header__logo,.header__topline{-ms-flex-align:center;align-items:center}.header__logo,.header__schedule,.header__topline{display:-ms-flexbox;display:flex}.header-address__phone{font-size:16px;margin-bottom:7px}.header-address__street{font-size:15px}.header-schedule__icon{width:36px;height:36px;margin-right:16px}.header__bottomline{display:-ms-flexbox;display:flex;height:57px;border-top:1px solid rgba(0,0,0,.11);-ms-flex-align:center;align-items:center}.header__nav{width:100%}.header__items{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.header__item{box-shadow:0 1px 0 #fcd200}.header__navlink{font-size:16px;text-decoration:none;text-transform:uppercase;color:#000}.footer{background-color:#fcd200}.footer-block{padding-top:23px}.footer-block__line{padding-bottom:40px}.footer-block__line--first{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.footer-block__line--second{font-size:12px;line-height:17px}.footer-block__slogan{font-weight:bolder;margin-top:20px;text-transform:uppercase}.footer-block__link{font-size:12px;line-height:21px;text-decoration:none;text-transform:uppercase;color:#000}.footer-block__address{margin-bottom:25px}.footer-block__btn{background-color:#fff}.hero-slide{height:557px;background-repeat:no-repeat;background-position:50%;background-size:auto 100%}.hero-slide--1{background-image:url(../img/slide1.jpg)}.hero-slide--2{background-image:url(../img/slide2.jpg)}.hero-slide--3{background-image:url(../img/slide3.jpg)}.hero-slide--4{background-image:url(../img/slide4.jpg)}.hero-slide__desc{display:-ms-flexbox;display:flex;flex-direction:column;width:50%;padding-top:115px;-ms-flex-direction:column}.hero-slide__title{font-size:33px;font-weight:700;line-height:39px;padding-bottom:35px;text-transform:uppercase}.hero-slide__text{font-size:17px;line-height:30px}.hero-slide__text p{margin-bottom:35px}.hero-slide__btn{-ms-flex-item-align:start;align-self:flex-start}.benefits{margin-top:52px;margin-bottom:36px}.benefits__block{-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center}.benefits__block,.benefits__box{display:-ms-flexbox;display:flex}.benefits__box{flex-direction:column;width:33.33333%;height:380px;padding-top:94px;padding-right:65px;padding-left:65px;-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.benefits__box:first-child{padding-top:48px}.benefits__box:nth-child(2n){background-color:#f8f8f8}.benefits__title{font-size:28px;margin-bottom:55px;text-align:center;text-transform:uppercase}.benefits__subtitle{font-size:18px;font-weight:bolder;margin-top:20px;margin-bottom:15px}.benefits__box-text{text-align:center}.percentage-banner{display:-ms-flexbox;display:flex;min-height:112px}.percentage-banner__left{font-size:29px;line-height:30px;width:50%;padding-top:30px;padding-right:34px;padding-left:38px;text-align:right;background-color:#fcd200}.percentage-banner__right{font-size:46px;width:50%;text-align:center;color:#fcd200;background-color:#000}.percentage-banner__right span{font-size:72px;font-weight:bolder;line-height:112px}.programs{margin-top:45px;padding-top:43px;background-color:#feeea1}.programs__title{font-size:30px;margin-bottom:40px;text-align:center;text-transform:uppercase}.programs__cards{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.programs-card{position:relative;width:32%;padding:33px 80px 56px 36px;transition:all .5s ease-in-out;background-image:linear-gradient(20deg,#ff4d49,#ffd67f);box-shadow:0 9px 21px rgba(0,0,0,.18)}.programs-card__title{font-size:18px;font-weight:bolder;position:relative;z-index:1;margin-bottom:5px}.programs-card__items{position:relative;z-index:1;padding-left:20px;border-left:2px solid hsla(0,0%,100%,.41)}.programs-card__item{font-size:18px;line-height:30px;z-index:1}.programs-card__btn{font-size:14px;line-height:36px;position:relative;z-index:1;visibility:hidden;margin-top:23px;transition:all .5s ease-in-out}.programs-card__img{position:absolute;right:14px;bottom:14px}.programs-card:focus,.programs-card:hover{transition:all .5s ease-in-out;transform:scale(1.05);box-shadow:0 12px 25 px rgba(0,0,0,.18)}.programs-card:focus .btn,.programs-card:hover .btn{visibility:visible;transition:all .5s ease-in-out}.programs-card:nth-child(2n){background-image:linear-gradient(20deg,#49cca8,#98e778)}.programs-card:nth-child(3n){background-image:linear-gradient(20deg,#709ff7,#b2e1d9)}.programs__arrow-block{display:-ms-flexbox;display:flex;padding-top:49px;padding-bottom:34px;-ms-flex-pack:center;justify-content:center}.programs__arrow-block .arrow-left{margin-right:32px}.main-table{width:100%;table-layout:fixed}.main-table__caption{padding-top:25px;text-align:center}.main-table__caption,.main-table__head{font-weight:bolder;background-color:#fcd200}.main-table__td{padding-top:20px;padding-bottom:20px;text-align:center}.main-table__td:last-child{width:290px}.main-table__td:first-child{width:215px;padding-left:20px;text-align-last:left}.main-table__td li{line-height:30px}.table-index{padding-top:50px;padding-bottom:50px}.table-index__stars{font-size:12px;margin-top:40px}.about-index{margin-bottom:96px;background-color:#feeea1}.about-block{display:-ms-flexbox;display:flex;overflow:hidden;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.about-block__img{box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;word-wrap:break-word}.about-block__img img{margin-bottom:-4px}.about-block__text{box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;padding-left:80px;word-wrap:break-word}.about-block__title{margin-top:60px;margin-bottom:36px}.about-block__subtitle{font-size:24px;line-height:37px;margin-top:35px}.about-block__btn{margin-top:48px}.partners-block{margin-bottom:100px}.partners-block__title{margin:25px auto;text-align:center}.partners-block__items{display:-ms-flexbox;display:flex;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.partners-block__item{display:-ms-flexbox;display:flex;flex-direction:column;box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;padding:40px;word-wrap:break-word;box-shadow:0 9px 21px rgba(0,0,0,.18);-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.partners-block__img{margin-bottom:33px}.partners-block__desc{font-size:15px;text-align:center}.documents-block{width:100%;padding-bottom:120px}.documents-block__title{margin:32px auto;text-align:center}.documents-block__items{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around}@media screen and (max-width:992px){.wrapper{padding-right:15px;padding-left:15px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
