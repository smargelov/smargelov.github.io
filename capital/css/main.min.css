@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900&display=swap&subset=cyrillic");blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-spacing:0;border-collapse:collapse}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-weight:400;font-style:normal}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}.wrapper{max-width:1170px;margin:0 auto;padding-right:30px;padding-left:30px}*{box-sizing:border-box}body{font-size:14px}.btn,body,input.btn{font-family:Roboto,sans-serif}.btn,input.btn{font-size:16px;font-weight:bolder;line-height:40px;display:inline-block;padding-right:23px;padding-left:23px;cursor:pointer;text-decoration:none;color:#000;border:none;border-radius:24px;background-color:#fcd200}strong{font-weight:700}em{font-style:italic}.h1,.h2{font-size:30px;line-height:30px}.breadcrumbs{margin-top:25px;margin-bottom:35px}.breadcrumbs__link{color:#000}.arrow-block{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.arrow-left{margin-right:32px}.form__label--check{font-size:12px;margin-top:20px;margin-bottom:20px;cursor:pointer}.form__check--text{position:relative;display:inline-block;padding-left:25px}.form__check--text:before{position:absolute;left:0;display:inline-block;width:15px;height:15px;content:"";border:1px solid rgba(0,0,0,.17);background-color:#fff}.form__check--text:after{background-image:none}.form__input:checked+.form__check--text:after{position:absolute;top:0;left:2px;display:inline-block;width:18px;height:14px;content:"";background-image:url(../img/checkon.png);background-repeat:no-repeat}.form__input--check{position:absolute;z-index:-1;margin-right:17px;opacity:0}.owl-next,.owl-prev{padding:0;cursor:pointer;border:none;outline:none;background-color:transparent}.icon{display:inline-block;width:1em;height:1em;fill:currentColor}.icon-1{font-size:7.152rem;width:1.04516em}.icon-preimusetva1{font-size:7.2rem;width:1.04167em}.icon-preimusetva2{font-size:8.6rem;width:.95349em}.icon-preimusetva3{font-size:6.5rem;width:1.13846em}.icon-preimusetva4{font-size:7.5rem;width:.77333em}.icon-preimusetva5{font-size:7rem;width:1.02857em}.icon-safe{font-size:7.2rem;width:1.04167em}.header-logo__img{max-width:234px;margin-right:20px}.header-logo__desc{font-size:17px;font-weight:400;line-height:18px;max-width:183px;padding-left:18px;text-transform:uppercase;border-left:2px solid #000}.header__topline{padding-top:25px;padding-bottom:5px;-ms-flex-pack:justify;justify-content:space-between}.header__logo,.header__topline{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.header__logo{text-decoration:none;color:#000}.header__schedule{display:-ms-flexbox;display:flex}.header-address__phone{font-size:16px;margin-bottom:7px}.header-address__street{font-size:15px}.header-schedule__icon{width:36px;height:36px;margin-right:16px}.header__burgerbox{display:none}.header__burger{position:relative;display:none;margin-left:23px;cursor:pointer}.header__burger,.header__burger:after,.header__burger:before{width:23px;height:3px;transition:all .3s ease-in-out;background-color:#000}.header__burger:after,.header__burger:before{position:absolute;display:block;content:""}.header__burger:after{bottom:-8px}.header__burger:before{top:-8px}.header__burger--active{transition:all .3s ease-in-out;background-color:transparent}.header__burger--active:after{bottom:0;transition:all .3s ease-in-out;transform:rotate(45deg)}.header__burger--active:before{top:0;transition:all .3s ease-in-out;transform:rotate(-45deg)}.header__bottomline{display:-ms-flexbox;display:flex;height:57px;border-top:1px solid rgba(0,0,0,.11);border-bottom:1px solid rgba(0,0,0,.11);-ms-flex-align:center;align-items:center}.header__nav{width:100%}.header__items{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.header__item{box-shadow:0 1px 0 #fcd200}.header__navlink{font-size:16px;text-decoration:none;text-transform:uppercase;color:#000}.footer{background-color:#fcd200}.footer-block{padding-top:23px}.footer-block__line{padding-bottom:40px}.footer-block__line--first{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.footer-block__line--second{font-size:12px;line-height:17px}.footer-block__slogan{font-weight:bolder;margin-top:20px;text-transform:uppercase}.footer-block__link{font-size:12px;line-height:21px;text-decoration:none;text-transform:uppercase;color:#000}.footer-block__address{margin-bottom:25px}.footer-block__btn{background-color:#fff}.hero-slide{height:557px;background-repeat:no-repeat;background-position:50%;background-size:auto 100%}.hero-slide--1{background-image:url(../img/slide1.jpg)}.hero-slide--2{background-image:url(../img/slide2.jpg)}.hero-slide--3{background-image:url(../img/slide3.jpg)}.hero-slide--4{background-image:url(../img/slide4.jpg)}.hero-slide__desc{display:-ms-flexbox;display:flex;flex-direction:column;width:50%;height:557px;-ms-flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.hero-slide__title{font-size:33px;font-weight:700;line-height:39px;padding-bottom:35px;text-transform:uppercase}.hero-slide__text{font-size:17px;line-height:30px}.hero-slide__text p{margin-bottom:35px}.hero-slide__btn{-ms-flex-item-align:start;align-self:flex-start}.owl-carousel .owl-dots{position:absolute;z-index:10;bottom:17px;left:50%;display:-ms-flexbox;display:flex;width:100px;transform:translateX(-50%);-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.owl-carousel button.owl-dot{width:8px;height:8px;border-radius:50%;background-color:#fff}.owl-carousel button.owl-dot.active{width:15px;height:15px;background-color:#fcd200}.benefits{margin-top:52px;margin-bottom:36px}.benefits__block{-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center}.benefits__block,.benefits__box{display:-ms-flexbox;display:flex}.benefits__box{flex-direction:column;width:33.33333%;height:380px;padding-top:94px;padding-right:65px;padding-left:65px;transition:all .5s ease-in-out;-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.benefits__box:focus,.benefits__box:hover{transition:all .5s ease-in-out;transform:scale(1.05);box-shadow:0 4px 12px rgba(0,0,0,.5)}.benefits__box:first-child{padding-top:48px}.benefits__box:nth-child(2n){background-color:#f8f8f8}.benefits__title{font-size:28px;margin-bottom:55px;text-align:center;text-transform:uppercase}.benefits__subtitle{font-size:18px;font-weight:bolder;margin-top:20px;margin-bottom:15px;text-align:center}.benefits__box-text{text-align:center}.percentage-banner{display:-ms-flexbox;display:flex;min-height:112px;-ms-flex-wrap:wrap;flex-wrap:wrap}.percentage-banner__left{font-size:29px;line-height:30px;width:50%;padding-top:30px;padding-right:34px;padding-left:38px;text-align:right;background-color:#fcd200}.percentage-banner__right{font-size:46px;width:50%;text-align:center;color:#fcd200;background-color:#000}.percentage-banner__right span{font-size:72px;font-weight:bolder;line-height:112px}.programs{margin-top:45px;padding-top:43px;background-color:#feeea1}.programs__title{font-size:30px;margin-bottom:40px;text-align:center;text-transform:uppercase}.programs__cards{-ms-flex-pack:justify;justify-content:space-between}.programs .owl-item,.programs .owl-stage,.programs__cards{display:-ms-flexbox;display:flex}.programs .owl-stage{position:relative}.programs .owl-item{position:relative;padding:20px}.programs-card{position:relative;padding:33px 80px 56px 36px;transition:all .5s ease-in-out;box-shadow:0 9px 21px rgba(0,0,0,.18)}.programs-card--1{background-image:linear-gradient(20deg,#e4a5c8,#d9c3d9)}.programs-card--2{background-image:linear-gradient(20deg,#ffb464,#edcc62)}.programs-card--3{background-image:linear-gradient(20deg,#a463ef,#9cd6e2)}.programs-card--4{background-image:linear-gradient(20deg,#ff4d49,#ffd67f)}.programs-card--5{background-image:linear-gradient(20deg,#49cca8,#98e778)}.programs-card--6{background-image:linear-gradient(20deg,#709ff7,#b2e1d9)}.programs-card:focus,.programs-card:hover{top:0;left:0;transition:all .5s ease-in-out;transform:scale(1.05);box-shadow:0 12px 25px rgba(0,0,0,.18)}.programs-card:focus .btn,.programs-card:hover .btn{visibility:visible;transition:all .5s ease-in-out}.programs-card__title{font-size:18px;font-weight:bolder;position:relative;z-index:10;margin-bottom:5px}.programs-card__items{position:relative;z-index:10;padding-left:20px;border-left:2px solid hsla(0,0%,100%,.41)}.programs-card__item{font-size:18px;line-height:30px;z-index:10}.programs-card__btn{font-size:14px;line-height:36px;position:relative;z-index:10;visibility:hidden;margin-top:23px;transition:all .5s ease-in-out}.programs-card__img{position:absolute;right:14px;bottom:14px}.programs .sber__arrow-block,.programs__arrow-block{padding-top:49px;padding-bottom:34px}.main-table{width:100%;table-layout:fixed}.main-table__caption{padding-top:25px;text-align:center}.main-table__caption,.main-table__head{font-weight:bolder;background-color:#fcd200}.main-table__tr:nth-child(2n){background-color:#eee}.main-table__td{padding-top:20px;padding-bottom:20px;text-align:center}.main-table__td:last-child{width:290px}.main-table__td:first-child{width:215px;padding-left:20px;text-align-last:left}.main-table__td li{line-height:30px}.table-index{padding-top:50px;padding-bottom:50px}.table-index__stars{font-size:12px;margin-top:40px}.about-index{margin-bottom:96px;background-color:#feeea1}.about-block{display:-ms-flexbox;display:flex;overflow:hidden;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.about-block__img{box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;word-wrap:break-word}.about-block__img img{margin-bottom:-4px}.about-block__text{box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;padding-left:80px;word-wrap:break-word}.about-block__title{margin-top:60px;margin-bottom:36px}.about-block__subtitle{font-size:24px;line-height:37px;margin-top:35px}.about-block__btn{margin-top:48px}.partners-block{margin-bottom:100px}.partners-block__title{margin:25px auto;text-align:center}.partners-block .owl-item,.partners-block .owl-stage{display:-ms-flexbox;display:flex}.partners-block .owl-item{padding:20px}.partners-block__item{display:-ms-flexbox;display:flex;flex-direction:column;padding:40px;box-shadow:0 9px 21px rgba(0,0,0,.18);-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.partners-block__img{margin-bottom:33px}.partners-block__desc{font-size:15px;text-align:center}.partners-block .part__arrow-block{margin-top:15px}.documents-block{width:100%;padding-bottom:120px}.documents-block__title{margin:32px auto;text-align:center}.documents-block__items{-ms-flex-pack:distribute;justify-content:space-around}.about-top__block,.documents-block__items{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.about-top__block{margin-right:-15px;margin-left:-15px}.about-top__slider{position:relative;box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;word-wrap:break-word}.about-top__slide{position:relative;width:100%;height:598px;background-repeat:no-repeat;background-position:100% 0;background-size:auto 100%}.about-top__slide-desc{font-size:29px;line-height:40px;position:absolute;right:0;bottom:79px;width:458px;padding:35px;color:#fefefe;background-color:rgba(0,0,0,.7);text-shadow:0 0 25px rgba(0,0,0,.58)}.about-top__arrow-block{position:absolute;z-index:10;right:0;bottom:0}.about-top__arrow-left{margin-right:1px}.about-top__arrow-left,.about-top__arrow-right{padding:20px 15px 15px;background-color:hsla(0,0%,100%,.73)}.about-top__content{box-sizing:border-box;width:calc(50% - 30px);margin-right:15px;margin-left:15px;word-wrap:break-word}.about-top__title{margin-bottom:39px}.about-top__text{line-height:24px;margin-bottom:30px}.priorities{margin-bottom:60px;background-color:#f8f2e2;background-image:url(../img/about-bg.png);background-repeat:no-repeat;background-position:100% 0;background-size:auto 100%}.priorities__content{width:50%;padding-top:88px;padding-bottom:100px}.priorities__title{margin-bottom:48px}.priorities__text{line-height:24px;margin-bottom:30px}.priorities__fileblock{display:-ms-flexbox;display:flex}.priorities__img{-ms-flex-negative:0;flex-shrink:0}.priorities__link{margin-left:22px;color:#000}.about__arrow-block{margin-top:38px}.feedback{margin-top:-15px;margin-bottom:75px}.feedback__title{margin-bottom:44px;text-align:center}.feedback .owl-item,.feedback .owl-stage,.feedback__item,.feedback__items{display:-ms-flexbox;display:flex}.feedback__item{flex-direction:column;-ms-flex-direction:column}.feedback__item:before{display:block;width:100%;height:23px;margin-bottom:26px;content:"";background-image:url(../img/about-quotes.png);background-repeat:no-repeat;background-position:0 0;background-size:auto 100%}.feedback__text{font-size:13px;line-height:24px;margin-bottom:25px;-ms-flex-positive:1;flex-grow:1}.feedback__author{font-weight:bolder;line-height:24px;position:relative;padding-top:20px;border-top:3px solid #fcd200}.feedback__author:before{position:absolute;top:0;left:21px;width:0;height:0;content:"";border:5px solid transparent;border-top:5px solid #fcd200;border-left:5px solid #fcd200}.feedback__prof{font-weight:100;font-style:italic;height:17px}.feedback__arrow-block{margin-top:30px}.faq{margin-bottom:100px}.faq__title{text-align:center}.faq__items{margin-top:30px}.faq__item{position:relative;padding-top:27px;padding-right:85px;padding-left:55px;border-bottom:1px solid #eee}.faq__item--active{padding-top:35px;padding-bottom:40px;background-color:#eee}.faq__item--active .faq__question{margin-top:0}.faq__question{font-size:24px;font-weight:bolder;line-height:27px;margin-top:0;margin-bottom:20px}.faq__answer{line-height:23px;display:none;padding-left:20px;border-left:2px solid #fcd200}.faq__btn{font-size:24px;font-weight:bolder;line-height:38px;position:absolute;top:18px;right:15px;width:38px;height:38px;text-align:center;border-radius:19px;background-color:#fcd200}.license{padding-bottom:76px}.license__text{font-size:12px;line-height:18px;margin-bottom:25px;color:#636363}.license__text:last-child{margin-bottom:0}.forpeaple{height:608px;margin-bottom:88px;background-color:#faf9f4;background-image:url(../img/loans-first.png);background-repeat:no-repeat;background-position:0 0;background-size:auto 100%}.forpeaple__block{width:50%;margin-left:50%;padding-top:190px}.forpeaple__title{margin-bottom:40px}.forpeaple__text{line-height:24px;margin-bottom:30px}.loans-list{margin-bottom:66px}.loans-list__title{margin-bottom:46px}.loans-list__items{display:-ms-flexbox;display:flex;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.loans-list__item{box-sizing:border-box;width:calc(33.33333% - 30px);margin-right:15px;margin-left:15px;padding:10px;transition:all .5s ease-in-out;word-wrap:break-word}.loans-list__item:focus,.loans-list__item:hover{transition:all .5s ease-in-out;transform:scale(1.05);box-shadow:0 4px 12px rgba(0,0,0,.5)}.loans-list__img-box{display:-ms-flexbox;display:flex;height:160px;-ms-flex-align:end;align-items:flex-end;-ms-flex-pack:center;justify-content:center}.loans-list__subtitle{font-size:20px;font-weight:700;line-height:24px;margin-top:45px;margin-bottom:18px}.loans-list__desc{font-weight:bolder;line-height:18px}.loans-list__list-item{line-height:18px;margin-bottom:15px}.borrower{padding-bottom:68px;background-color:#fffcea}.borrower__title{padding-top:65px}.borrower__table{margin-top:27px}.borrower__head{font-weight:700;table-layout:fixed;background-color:#fcd200}.borrower__tr:not(last-child){border-bottom:1px solid #f7f4e2}.borrower__td{padding:15px 34px}.borrower__td:first-child{font-weight:bolder;width:210px}.borrower__td--head{font-size:15px;line-height:18px;padding:25px 34px}.borrower__td--head:not(first-child){border-left:1px solid rgba(255,252,234,.57)}.borrower__td li{margin-bottom:10px}.companies{padding-top:85px;padding-bottom:115px}.companies__title{margin-bottom:37px}.companies__items{display:-ms-flexbox;display:flex;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.companies__item{position:relative;display:-ms-flexbox;display:flex;box-sizing:border-box;width:calc(25% - 30px);height:150px;margin-right:15px;margin-bottom:21px;margin-left:15px;transition:all .5s ease-in-out;word-wrap:break-word;box-shadow:0 9px 21px rgba(0,0,0,.18);-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.companies__item:focus,.companies__item:hover{transition:all .5s ease-in-out;transform:scale(1.05)}.companies__item:focus .tooltip__text,.companies__item:hover .tooltip__text{visibility:visible;opacity:1}.tooltip__text{font-size:14px;line-height:18px;position:absolute;z-index:15;bottom:80%;visibility:hidden;width:110%;padding:33px;background-color:#fff3b9;box-shadow:0 14px 30px rgba(181,163,71,.77)}.tooltip__text:after{position:absolute;top:99%;left:50%;margin-left:-15px;content:"";border-width:15px;border-style:solid;border-color:#fff3b9 transparent transparent}.news{margin-bottom:114px}.news__items{display:-ms-flexbox;display:flex;margin-top:35px;margin-right:-15px;margin-left:-15px;-ms-flex-wrap:wrap;flex-wrap:wrap}.news__item{box-sizing:border-box;width:calc(33.33333% - 30px);margin-right:15px;margin-bottom:65px;margin-left:15px;word-wrap:break-word}.news__date{font-size:12px;margin-bottom:10px}.news__img{width:100%}.news__subtitle{margin-top:20px;margin-bottom:20px}.news__subtitle a{font-size:18px;font-weight:bolder;text-decoration:none;color:#000;border-bottom:1px solid #fcd200}.news__text{line-height:24px;margin-bottom:20px}.news__btn{border:2px solid #fcd200;background-color:transparent}.single{margin-bottom:128px}.single__title{margin-bottom:28px}.single__date{margin-bottom:12px}.single__img{width:100%}.single__content{margin-top:45px}.single__content p{line-height:24px;margin-bottom:30px}.contacts{position:relative;height:838px}.contacts__wrap{position:absolute;top:66px;left:52%;transform:translateX(-100%)}.contacts__card{z-index:10;width:586px;padding:55px 60px;background-color:#fff}.contacts__text,.contacts__title{margin-bottom:30px}.contacts__text{line-height:24px}.contacts__subtitle{margin-bottom:30px}.contacts__photos{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.program__title{padding-bottom:15px}.program__line{padding-top:35px;padding-bottom:35px;transition:all .5s ease-in-out}.program__line:focus,.program__line:hover{padding-right:10px;padding-left:10px;transition:all .5s ease-in-out;transform:scale(1.05);box-shadow:0 4px 12px rgba(0,0,0,.5)}.program__line--1{background-color:#f7d100}.program__line--2{background-color:#fbda00}.program__line--3{background-color:#fce55f}.program__line--4{background-color:#fded8f}.program__line--5{background-color:#fef6c7}.program__line--6{background-color:#fefadf}.program__subtitle{font-size:20px;font-weight:700;line-height:24px;margin-bottom:34px}.program__items{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.program__item--1{width:110px}.program__item--2{width:185px}.program__item--3{width:375px;padding-right:20px}.program__item--3 li{list-style-type:disc}.program__item--4{width:500px}.program__item--4 li{list-style-type:disc}.program__item li{margin-bottom:7px}.prog-form{margin-bottom:69px;padding-top:59px;padding-bottom:53px;color:#fff;background-image:url(../img/bg-form.png)}.prog-form__title{margin-bottom:26px;text-align:center}.prog-form__form{display:-ms-flexbox;display:flex;flex-direction:column;-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.prog-form__input-line{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.prog-form__label:first-child{margin-right:38px}.prog-form__input--text{width:362px;height:37px;margin-top:7px;padding-right:10px;padding-left:10px}.prog-form__link{color:#fcd200}.prog-table__title{margin-bottom:39px;text-align:center}.prog-table__btn{margin-top:51px;margin-bottom:65px;padding-right:58px;padding-left:58px}.prog-table__btn-block{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.overlay{z-index:20;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,0,.6)}.modal,.overlay{position:fixed;display:none}.modal{z-index:25;top:50%;left:50%;transform:translate(-50%,-50%);background-color:#fff}.modal__close{font-size:41px;position:absolute;top:0;right:0;display:-ms-flexbox;display:flex;width:41px;height:41px;cursor:pointer;color:#fff;background-color:#fcd200;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.modal__title{font-weight:300;text-align:center}.modal-form{width:550px;padding:41px 60px}.modal-form__form{display:-ms-flexbox;display:flex;flex-direction:column;margin-top:39px;-ms-flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.modal-form__label{font-weight:700}.modal-form__input{font-size:20px;font-weight:400;line-height:36px;width:100%;margin-top:8px;margin-bottom:25px;padding-right:10px;padding-left:10px;border:1px solid rgba(0,0,0,.17)}.modal-form__input--text{height:36px}.modal-form__input--textarea{height:109px}.modal-form__check--text{font-size:12px;font-weight:300;display:inline-block}.modal-form__link{color:#000}.modal-form__btn{-ms-flex-item-align:center;align-self:center}.label__line{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.label__line label{width:49%}.diff__modal{padding:42px 60px}.diff__table{width:922px;margin-top:57px}.diff__head{font-size:24px;font-weight:700}.diff__body{font-size:14px;line-height:24px;border-top:6px solid #fcd200;border-bottom:6px solid #fcd200}.diff__tr:not(first-child){border-top:1px solid rgba(0,0,0,.1)}.diff__td{padding-top:10px;padding-bottom:10px}.diff__td:first-child{font-weight:bolder}@media screen and (max-width:1200px){.header-schedule{display:none}.percentage-banner__left{font-size:25px;padding-left:15px}.programs-card{padding:20px}.main-table__td:last-child{width:200px}.about-block__text{padding-left:20px}.about-block__title{margin-top:20px}.about-block__btn{margin-top:25px}.about-top__slide-desc{font-size:24px;line-height:35px;width:80%}.priorities{background-position:0 0}.contacts__card{width:450px}.program__item--2{padding-right:10px}.diff__table{width:800px}}@media screen and (max-width:992px){.wrapper{padding-right:15px;padding-left:15px}.header-logo__desc{display:none}.header__navlink{font-size:13px}.footer-block__line--first{-ms-flex-pack:distribute;justify-content:space-around}.footer-block__btn-block{margin-top:20px}.hero-slide{background-position:40% 0}.hero-slide__desc{width:65%}.hero-slide__title{font-size:25px}.benefits__box{width:50%}.benefits__box:nth-child(3n+2),.benefits__box:nth-child(3n+3){background-color:#f8f8f8}.benefits__box:nth-child(3n+4),.benefits__box:nth-child(3n+5){background-color:#fff}.percentage-banner__left{padding-top:0}.percentage-banner__left,.percentage-banner__right{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.percentage-banner__right{-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.percentage-banner__right span{line-height:72px;padding-right:17px}.main-table{font-size:10px}.main-table__td:first-child{width:150px}.about-index{margin-bottom:50px;padding-bottom:25px}.about-block__img{width:calc(83.33333% - 30px);margin-left:calc(8.33333% + 15px);margin-right:calc(8.33333% + 15px)}.about-block__text{width:calc(100% - 30px)}.partners-block__item{margin-bottom:20px}.about-top__text{font-size:12px;line-height:20px}.priorities__content{width:80%}.forpeaple{background-position:50% 0}.forpeaple__block{padding-top:100px}.loans-list__title{text-align:center}.loans-list__item{width:calc(50% - 30px);margin-left:calc(25% + 15px);margin-bottom:30px}.companies__item{width:calc(33.33333% - 30px)}.news__item{width:calc(50% - 30px)}.contacts__wrap{left:55%}.contacts__card{width:370px}.program__item--1{display:none}.program__item--3{width:250px}.program__item--4{width:300px}.prog-form__input--text{width:250px}.diff__table{width:580px}}@media screen and (max-width:720px){.header-logo__img{max-width:150px}.header-address__street{font-size:12px}.footer-block__address-block{margin-top:20px}.hero-slide{background-position:45% 0}.hero-slide__desc{width:75%}.benefits__box{width:60%}.benefits__box:nth-child(2n){background-color:#f8f8f8}.benefits__box:nth-child(odd){background-color:#fff}.percentage-banner__left{width:100%;height:112px}.percentage-banner__right{width:100%}.percentage-banner__right span{line-height:112px}.table-index{display:none}.about-index{margin-top:20px}.about-top__content,.about-top__slider{width:calc(100% - 30px)}.about-top__title{margin-top:30px}.about-top__text{font-size:14px;line-height:24px}.forpeaple__block{width:70%;margin-left:30%;padding-top:80px}.borrower__td{font-size:11px}.borrower__td:first-child{width:150px}.companies__item{width:calc(50% - 30px)}.contacts{display:-ms-flexbox;display:flex;flex-direction:column-reverse;height:1000px;-ms-flex-direction:column-reverse}.contacts__wrap{position:relative;top:0;left:0;transform:translateX(0)}.contacts__card{width:100%;padding:0 30px 30px}.program__item{font-size:11px}.prog-form{margin-bottom:0}.prog-table{display:none}.diff__modal{padding:42px 30px}.diff__table{width:470px}.diff__body{font-size:12px;line-height:17px}.diff__td:first-child{padding-right:10px}.diff__td:last-child{padding-left:10px}}@media screen and (max-width:576px){.header-logo__img{max-width:100px}.header-address{display:none}.header__btn{font-size:11px;line-height:23px;padding:5px 20px}.header__burgerbox{position:relative;display:-ms-flexbox;display:flex;height:19px;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.header__burger{display:block}.header__bottomline{display:none;height:auto}.header__items{flex-direction:column;padding-top:10px;padding-bottom:10px;-ms-flex-direction:column;-ms-flex-align:end;align-items:flex-end}.header__item{margin-top:5px;margin-bottom:5px}.header__navlink{font-size:18px}.footer-block__line--first{flex-direction:column;-ms-flex-direction:column}.footer-block__menu{margin-top:20px}.hero-slide{background-position:30% 0}.hero-slide__desc{width:100%}.hero-slide__title{font-size:20px;line-height:24px}.benefits__box{display:-ms-flexbox;display:flex;width:90%;padding-top:0;-ms-flex-pack:center;justify-content:center}.percentage-banner__left{font-size:17px;font-weight:700;height:84px;padding-right:5px;padding-left:5px}.percentage-banner__right{font-size:28px}.percentage-banner__right span{font-size:40px;line-height:84px}.programs-card{width:100%}.about-block__img{width:calc(100% - 30px);margin-left:calc(0% + 15px);margin-right:calc(0% + 15px)}.about-block__btn{display:none}.about-top__slide-desc{font-size:18px;line-height:24px}.priorities__content{width:100%}.faq__item{padding-top:20px;padding-left:20px}.faq__question{font-size:18px;line-height:24px}.forpeaple{background-position:100% 0}.forpeaple__block{width:100%;margin-left:0}.loans-list__item{width:calc(100% - 30px);margin-left:calc(0% + 15px)}.borrower{display:none}.companies{padding-top:0;padding-bottom:50px}.companies__item{width:calc(100% - 30px)}.tooltip__text{width:100%}.news__item{width:calc(100% - 30px)}.contacts__card{padding-right:0;padding-left:0}.program__item--3{padding-right:5px;padding-left:5px}.program__item--3 li,.program__item--4 li{list-style-type:none}.prog-form__input-line{flex-direction:column;-ms-flex-direction:column;-ms-flex-align:center;align-items:center}.prog-form__label:first-child{margin-right:0;margin-bottom:20px}.prog-form__check--text{padding-left:18px}.modal{width:95%}.modal-form{padding-right:5%;padding-left:5%}.diff__table{width:300px;margin-top:20px}.diff__head{font-size:20px}.diff__td{padding-top:5px;padding-bottom:5px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
